
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COR_A COR_C DPTOS PAQUETE USUARIO PASSWORD LOGIN ERROR HISTORIAL EJECUCION MENSAJE USQL REPORTE CADENA BACUPplycs : lpaquetelpaquete : paquete lpaquete\n                | paquete : COR_A PAQUETE DPTOS tipo MENSAJE DPTOS CADENA COR_Ctipo : USQL\n            | REPORTE\n            | ERROR\n            | EJECUCION\n            | HISTORIAL\n            | BACUP\n            | LOGIN'
    
_lr_action_items = {'$end':([0,1,2,3,5,19,],[-3,0,-1,-3,-2,-4,]),'COR_A':([0,3,19,],[4,4,-4,]),'PAQUETE':([4,],[6,]),'DPTOS':([6,16,],[7,17,]),'USQL':([7,],[9,]),'REPORTE':([7,],[10,]),'ERROR':([7,],[11,]),'EJECUCION':([7,],[12,]),'HISTORIAL':([7,],[13,]),'BACUP':([7,],[14,]),'LOGIN':([7,],[15,]),'MENSAJE':([8,9,10,11,12,13,14,15,],[16,-5,-6,-7,-8,-9,-10,-11,]),'CADENA':([17,],[18,]),'COR_C':([18,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'plycs':([0,],[1,]),'lpaquete':([0,3,],[2,5,]),'paquete':([0,3,],[3,3,]),'tipo':([7,],[8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> plycs","S'",1,None,None,None),
  ('plycs -> lpaquete','plycs',1,'p_plycs','Sintactico.py',12),
  ('lpaquete -> paquete lpaquete','lpaquete',2,'p_lpaquete','Sintactico.py',16),
  ('lpaquete -> <empty>','lpaquete',0,'p_lpaquete','Sintactico.py',17),
  ('paquete -> COR_A PAQUETE DPTOS tipo MENSAJE DPTOS CADENA COR_C','paquete',8,'p_paquete','Sintactico.py',25),
  ('tipo -> USQL','tipo',1,'p_tipo','Sintactico.py',32),
  ('tipo -> REPORTE','tipo',1,'p_tipo','Sintactico.py',33),
  ('tipo -> ERROR','tipo',1,'p_tipo','Sintactico.py',34),
  ('tipo -> EJECUCION','tipo',1,'p_tipo','Sintactico.py',35),
  ('tipo -> HISTORIAL','tipo',1,'p_tipo','Sintactico.py',36),
  ('tipo -> BACUP','tipo',1,'p_tipo','Sintactico.py',37),
  ('tipo -> LOGIN','tipo',1,'p_tipo','Sintactico.py',38),
]
