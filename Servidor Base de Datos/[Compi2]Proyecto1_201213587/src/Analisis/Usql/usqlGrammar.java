/* usqlGrammar.java */
/* Generated By:JavaCC: Do not edit this line. usqlGrammar.java */
package Analisis.Usql;

import Funciones.Usql.*;
import Funciones.XML.*;
import Static.*;
import java.util.ArrayList;
import EjecucionUsql.*;

public class usqlGrammar implements usqlGrammarConstants {
  public static void main(String args[]) throws ParseException {
    usqlGrammar parser = new usqlGrammar(System.in);
    parser.S();
  }

  final public EjecucionUsql S() throws ParseException {ArrayList<Simbolo> s = new ArrayList<Simbolo>();
System.out.println("Comienza!!");
    if (jj_2_1(2)) {
      s = L_INSTRUCCION();
    } else {
      ;
    }
System.out.println("Exito!!");
{if ("" != null) return new EjecucionUsql(s);}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> L_INSTRUCCION() throws ParseException {ArrayList<Simbolo> l = new ArrayList<Simbolo>(); ArrayList<Simbolo> l2 = new ArrayList<Simbolo>();
    l = INSTRUCCION();
    if (jj_2_2(2)) {
      l2 = L_INSTRUCCION();
    } else {
      ;
    }
for(Simbolo sim : l2){
            l.add(sim);
        }
        {if ("" != null) return l;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> INSTRUCCION() throws ParseException {ArrayList<Simbolo> l = new ArrayList<Simbolo>(); Simbolo s;
    if (jj_2_3(2)) {
      l = DDL();
{if ("" != null) return l;}
    } else if (jj_2_4(2)) {
      l = DML();
{if ("" != null) return l;}
    } else if (jj_2_5(2)) {
      l = DCL();
{if ("" != null) return l;}
    } else if (jj_2_6(2)) {
      l = SSL();
{if ("" != null) return l;}
    } else if (jj_2_7(2)) {
      l = DECLARACION();
{if ("" != null) return l;}
    } else if (jj_2_8(2)) {
      LLAMADA_METODO();
{if ("" != null) return l;}
    } else if (jj_2_9(2)) {
      s = IMPRIMIR();
l.add(s); {if ("" != null) return l;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Simbolo IMPRIMIR() throws ParseException {Token t; FNodoExpresion exp;
    t = jj_consume_token(T_IMPRIMIR);
    jj_consume_token(PAR_IZQ);
    exp = LOGICA_OR();
    jj_consume_token(PAR_DER);
    jj_consume_token(PCOMA);
FImprimir f = new FImprimir(exp);
        Simbolo s = new Simbolo(Constante.TImprimir, Constante.TImprimir, Constante.TImprimir, f.Ambito, f, t.beginLine, t.beginColumn);
        {if ("" != null) return s;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> DDL() throws ParseException {ArrayList<Simbolo> ls = new ArrayList<Simbolo>(); Simbolo s; Token t,t2;
    if (jj_2_10(2)) {
      t2 = jj_consume_token(T_USAR);
      t = jj_consume_token(ID);
      jj_consume_token(PCOMA);
FUsarBaseDatos ub = new FUsarBaseDatos(t.image, new Ambito(t.image, new ArrayList<Simbolo>()), t2.beginLine, t2.beginColumn);
                                Simbolo sim = new Simbolo(Constante.TUsarBaseDatos, Constante.TUsarBaseDatos, Constante.TUsarBaseDatos, ub.Ambito, ub, ub.Fila, ub.Columna);
                                ls.add(sim);
                                {if ("" != null) return ls;}
    } else if (jj_2_11(2)) {
      s = CREATE();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_12(2)) {
      s = ALTER();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_13(2)) {
      s = ELIMINAR();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_14(2)) {
      BACKUP();
    } else if (jj_2_15(2)) {
      RESTAURAR();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> DML() throws ParseException {ArrayList<Simbolo> ls = new ArrayList<Simbolo>(); Simbolo s=null;
    if (jj_2_16(2)) {
      s = INSERTAR();
    } else if (jj_2_17(2)) {
      ACTUALIZAR();
    } else if (jj_2_18(2)) {
      BORRAR();
    } else if (jj_2_19(2)) {
      SELECCIONAR();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
ls.add(s); {if ("" != null) return ls;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> DCL() throws ParseException {
    if (jj_2_24(2)) {
      jj_consume_token(T_OTORGAR);
      jj_consume_token(ID);
      jj_consume_token(COMA);
      jj_consume_token(ID);
      jj_consume_token(PUNTO);
      if (jj_2_20(2)) {
        jj_consume_token(POR);
      } else if (jj_2_21(2)) {
        jj_consume_token(ID);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(PCOMA);
    } else if (jj_2_25(2)) {
      jj_consume_token(T_DENEGAR);
      jj_consume_token(ID);
      jj_consume_token(COMA);
      jj_consume_token(ID);
      jj_consume_token(PUNTO);
      if (jj_2_22(2)) {
        jj_consume_token(POR);
      } else if (jj_2_23(2)) {
        jj_consume_token(ID);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(PCOMA);
{if ("" != null) return null;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> SSL() throws ParseException {ArrayList<Simbolo> ls = new ArrayList<Simbolo>(); Simbolo s; Token t;
    if (jj_2_26(2)) {
      ls = DECLARACION();
{if ("" != null) return ls;}
    } else if (jj_2_27(2)) {
      s = ASIGNACION();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_28(2)) {
      s = SI();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_29(2)) {
      s = SELECCIONA();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_30(2)) {
      s = PARA();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_31(2)) {
      s = MIENTRAS();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_32(2)) {
      t = jj_consume_token(T_DETENER);
      jj_consume_token(PCOMA);
ls.add(new Simbolo(Constante.TDetener,Constante.TDetener, Constante.TDetener, new Ambito(Constante.TDetener, new ArrayList<Simbolo>()), null, t.beginLine, t.beginColumn)); {if ("" != null) return ls;}
    } else if (jj_2_33(2)) {
      s = IMPRIMIR();
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_34(2)) {
      s = RETORNO();
      jj_consume_token(PCOMA);
ls.add(s); {if ("" != null) return ls;}
    } else if (jj_2_35(2)) {
      s = LLAMADA_METODO();
ls.add(s); {if ("" != null) return ls;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Simbolo LLAMADA_METODO() throws ParseException {Token t; ArrayList<FNodoExpresion> le = new ArrayList<FNodoExpresion>();
    t = jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    if (jj_2_36(2)) {
      le = L_EXPRESIONES();
    } else {
      ;
    }
    jj_consume_token(PAR_DER);
    jj_consume_token(PCOMA);
FLlamadaMetodo lm = new FLlamadaMetodo(t.image, le, t.beginLine, t.beginColumn);
        {if ("" != null) return new Simbolo(Constante.TLlamadaMetodo, Constante.TLlamadaMetodo, Constante.TLlamadaMetodo, new Ambito(Constante.TLlamadaMetodo, new ArrayList<Simbolo>()), lm, t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo CREATE() throws ParseException {Token t; FCrearBaseDatos cb; FCrearTabla ct; FCrearUsuario cu; FMetodo cm; FCrearObjeto co;
    t = jj_consume_token(T_CREAR);
    if (jj_2_41(2)) {
      if (jj_2_37(2)) {
        cb = CREATE_BASE();
cb.Fila = t.beginLine; cb.Columna = t.beginColumn; {if ("" != null) return new Simbolo(Constante.TCrearBaseDatos, Constante.TCrearBaseDatos, Constante.TCrearBaseDatos, cb.Ambito, cb, cb.Fila, cb.Columna);}
      } else if (jj_2_38(2)) {
        ct = CREATE_TABLA();
ct.Fila = t.beginLine; ct.Columna = t.beginColumn; {if ("" != null) return new Simbolo(Constante.TCrearTabla, Constante.TCrearTabla, Constante.TCrearTabla, ct.Ambito, ct, ct.Fila, ct.Columna);}
      } else if (jj_2_39(2)) {
        co = CREATE_OBJETO();
co.Fila = t.beginLine; co.Columna = t.beginColumn; {if ("" != null) return new Simbolo(Constante.TCrearObjeto, Constante.TCrearObjeto, Constante.TCrearObjeto, co.Ambito, co, co.Fila, co.Columna);}
      } else if (jj_2_40(2)) {
        cu = CREATE_USUARIO();
cu.Fila = t.beginLine; cu.Columna = t.beginColumn; {if ("" != null) return new Simbolo(Constante.TCrearUsuario, Constante.TCrearUsuario, Constante.TCrearUsuario, cu.Ambito, cu, cu.Fila, cu.Columna);}
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(PCOMA);
    } else if (jj_2_42(2)) {
      cm = CREATE_PROCEDIMIENTO();
cm.Fila = t.beginLine; cm.Columna = t.beginColumn; {if ("" != null) return new Simbolo(cm.Tipo, cm.Nombre, Constante.TMetodo, cm.Ambito, cm, cm.Fila, cm.Columna);}
    } else if (jj_2_43(2)) {
      cm = CREATE_FUNCION();
cm.Fila = t.beginLine; cm.Columna = t.beginColumn; {if ("" != null) return new Simbolo(cm.Tipo, cm.Nombre, Constante.TMetodo, cm.Ambito, cm, cm.Fila, cm.Columna);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public FCrearBaseDatos CREATE_BASE() throws ParseException {Token t, t2;
    t = jj_consume_token(T_BASE_DATOS);
    t2 = jj_consume_token(ID);
{if ("" != null) return new FCrearBaseDatos(t2.image, new Ambito(t2.image, new ArrayList<Simbolo>()), t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public FCrearTabla CREATE_TABLA() throws ParseException {Token t,t2; ArrayList<ColumnaEstructura> lce;
    t = jj_consume_token(T_TABLA);
    t2 = jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    lce = L_CAMPO();
    jj_consume_token(PAR_DER);
{if ("" != null) return new FCrearTabla(t2.image, new Ambito(t2.image, new ArrayList<Simbolo>()), lce, t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<ColumnaEstructura> L_CAMPO() throws ParseException {ArrayList<ColumnaEstructura> lce = new ArrayList<ColumnaEstructura>(); ColumnaEstructura ce,ce2;
    ce = CAMPO();
lce.add(ce);
    label_1:
    while (true) {
      if (jj_2_44(2)) {
        ;
      } else {
        break label_1;
      }
      jj_consume_token(COMA);
      ce2 = CAMPO();
lce.add(ce2);
    }
{if ("" != null) return lce;}
    throw new Error("Missing return statement in function");
  }

  final public ColumnaEstructura CAMPO() throws ParseException {String tipo; Token t; Complemento c = new Complemento(); ColumnaEstructura ce = new ColumnaEstructura();
    tipo = TIPO_DATO();
    t = jj_consume_token(ID);
    if (jj_2_45(2)) {
      c = L_COMPLEMENTO();
    } else {
      ;
    }
if(tipo.equals(Tools.ttext) || tipo.equals(Tools.tinteger) || tipo.equals(Tools.tdouble) || tipo.equals(Tools.tbool) || tipo.equals(Tools.tdate) || tipo.equals(Tools.tdatetime)){
                ce.Tipo = 0;
                ce.NombreCampo = t.image;
                ce.TipoCampo = tipo;
            }else{
                ce.Tipo = 1;
                ce.NombreCampo = t.image;
                ce.TipoCampo = tipo;
            }
            ce.Complementos = c;
            {if ("" != null) return ce;}
    throw new Error("Missing return statement in function");
  }

  final public String TIPO_DATO() throws ParseException {Token t;
    if (jj_2_46(2)) {
      jj_consume_token(T_TEXT);
{if ("" != null) return Tools.ttext;}
    } else if (jj_2_47(2)) {
      jj_consume_token(T_INTEGER);
{if ("" != null) return Tools.tinteger;}
    } else if (jj_2_48(2)) {
      jj_consume_token(T_DOUBLE);
{if ("" != null) return Tools.tdouble;}
    } else if (jj_2_49(2)) {
      jj_consume_token(T_BOOL);
{if ("" != null) return Tools.tbool;}
    } else if (jj_2_50(2)) {
      jj_consume_token(T_DATE);
{if ("" != null) return Tools.tdate;}
    } else if (jj_2_51(2)) {
      jj_consume_token(T_DATETIME);
{if ("" != null) return Tools.tdatetime;}
    } else if (jj_2_52(2)) {
      t = jj_consume_token(ID);
{if ("" != null) return t.image;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Complemento L_COMPLEMENTO() throws ParseException {Complemento c; Complemento c2;
    c = COMPLEMENTO();
    if (jj_2_53(2)) {
      c2 = L_COMPLEMENTO();
if(c2.isNulo) c.isNulo = true;
                                        if(c2.isAutoincrementable) c.isAutoincrementable = true;
                                        if(c2.isPrimary) c.isPrimary = true;
                                        if(c2.isForanea) c.isForanea = true;
                                        if(c2.isForanea) c.Foranea = c2.Foranea;
    } else {
      ;
    }
{if ("" != null) return c;}
    throw new Error("Missing return statement in function");
  }

  final public Complemento COMPLEMENTO() throws ParseException {Complemento com = new Complemento(); Token t;
    if (jj_2_54(2)) {
      jj_consume_token(T_NULO);
com.isNulo = false;
    } else if (jj_2_55(2)) {
      jj_consume_token(T_NO_NULO);
com.isNulo = true;
    } else if (jj_2_56(2)) {
      jj_consume_token(T_AUTOINCREMETABLE);
com.isAutoincrementable = true;
    } else if (jj_2_57(2)) {
      jj_consume_token(T_LLAVE_PRIMARIA);
com.isPrimary = true;
    } else if (jj_2_58(2)) {
      jj_consume_token(T_LLAVE_FORANEA);
      t = jj_consume_token(ID);
com.isForanea = true; com.Foranea = t.image;
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return com;}
    throw new Error("Missing return statement in function");
  }

  final public FCrearObjeto CREATE_OBJETO() throws ParseException {Token t; ArrayList<Parametro> lp;
    jj_consume_token(T_OBJETO);
    t = jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    lp = L_ATRIBUTO();
    jj_consume_token(PAR_DER);
{if ("" != null) return new FCrearObjeto(t.image, lp, new Ambito(t.image, new ArrayList<Simbolo>()), t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Parametro> L_ATRIBUTO() throws ParseException {ArrayList<Parametro> lp = new ArrayList<Parametro>(); ArrayList<Parametro> lp2 = new ArrayList<Parametro>();
    lp = ATRIBUTO();
    if (jj_2_59(2)) {
      jj_consume_token(COMA);
      lp2 = L_ATRIBUTO();
for(int i=0; i < lp2.size(); i++){
                        lp.add(lp2.get(i));
                    }
    } else {
      ;
    }
{if ("" != null) return lp;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Parametro> ATRIBUTO() throws ParseException {String tipo; Token t; ArrayList<Parametro> lp = new ArrayList<Parametro>();
    tipo = TIPO_DATO_ATRIBUTO();
    t = jj_consume_token(ID);
lp.add(new Parametro(tipo, t.image)); {if ("" != null) return lp;}
    throw new Error("Missing return statement in function");
  }

  final public String TIPO_DATO_ATRIBUTO() throws ParseException {
    if (jj_2_60(2)) {
      jj_consume_token(T_TEXT);
{if ("" != null) return Constante.TCadena;}
    } else if (jj_2_61(2)) {
      jj_consume_token(T_INTEGER);
{if ("" != null) return Constante.TEntero;}
    } else if (jj_2_62(2)) {
      jj_consume_token(T_DOUBLE);
{if ("" != null) return Constante.TDecimal;}
    } else if (jj_2_63(2)) {
      jj_consume_token(T_BOOL);
{if ("" != null) return Constante.TBool;}
    } else if (jj_2_64(2)) {
      jj_consume_token(T_DATE);
{if ("" != null) return Constante.TDate;}
    } else if (jj_2_65(2)) {
      jj_consume_token(T_DATETIME);
{if ("" != null) return Constante.TDateTime;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public FMetodo CREATE_PROCEDIMIENTO() throws ParseException {Token t; ArrayList<Simbolo> ls; ArrayList<Simbolo> lp = new ArrayList<Simbolo>();
    jj_consume_token(T_PROCEDIMIENTO);
    t = jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    if (jj_2_66(2)) {
      lp = L_PARAMETRO();
    } else {
      ;
    }
    jj_consume_token(PAR_DER);
    jj_consume_token(LLAVE_IZQ);
    ls = L_SENTENCIAS();
    jj_consume_token(LLAVE_DER);
Ambito ambito = new Ambito(t.image, ls);
        for(Simbolo sim : ambito.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }
        for(Simbolo sim : lp){
            sim.Ambito.Padre = ambito;
        }

        {if ("" != null) return new FMetodo(lp, ambito, t.beginLine, t.beginColumn, Constante.TVacio, t.image);}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> L_PARAMETRO() throws ParseException {ArrayList<Simbolo> l; ArrayList<Simbolo> l2 = new ArrayList<Simbolo>();
    l = PARAMETRO();
    if (jj_2_67(2)) {
      jj_consume_token(COMA);
      l2 = L_PARAMETRO();
for(int i=0; i < l2.size(); i++){
                        l.add(l2.get(i));
                    }
    } else {
      ;
    }
{if ("" != null) return l;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> PARAMETRO() throws ParseException {String tipo; Token t;
    tipo = TIPO_DATO();
    t = jj_consume_token(ARROBA);
FDeclaracion fd = new FDeclaracion(tipo, t.image.substring(1, t.image.length()), new Ambito(Constante.TDeclaracion, new ArrayList<Simbolo>()), null, t.beginLine, t.beginColumn);
        Simbolo s = new Simbolo(fd.Tipo, fd.Nombre, Constante.TDeclaracion, fd.Ambito, fd, fd.Fila, fd.Columna);
        ArrayList<Simbolo> lista = new ArrayList<Simbolo>();
        lista.add(s);
        {if ("" != null) return lista;}
    throw new Error("Missing return statement in function");
  }

  final public FMetodo CREATE_FUNCION() throws ParseException {Token t; String tipo; ArrayList<Simbolo> ls; ArrayList<Simbolo> lp = new ArrayList<Simbolo>();
    jj_consume_token(T_FUNCION);
    t = jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    if (jj_2_68(2)) {
      lp = L_PARAMETRO();
    } else {
      ;
    }
    jj_consume_token(PAR_DER);
    tipo = TIPO_DATO();
    jj_consume_token(LLAVE_IZQ);
    ls = L_SENTENCIAS();
    jj_consume_token(LLAVE_DER);
Ambito ambito = new Ambito(t.image, ls);
        for(Simbolo sim : ambito.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }
        for(Simbolo sim : lp){
            sim.Ambito.Padre = ambito;
        }

        {if ("" != null) return new FMetodo(lp, ambito, t.beginLine, t.beginColumn, tipo, t.image);}
    throw new Error("Missing return statement in function");
  }

  final public FCrearUsuario CREATE_USUARIO() throws ParseException {Token t, t2;
    jj_consume_token(T_USUARIO);
    t = jj_consume_token(ID);
    jj_consume_token(T_COLOCAR);
    jj_consume_token(T_PASSWORD);
    jj_consume_token(IGUAL);
    t2 = jj_consume_token(CADENA);
FCrearUsuario usr = new FCrearUsuario(t.image, t2.image.substring(1, t2.image.length() - 1), new Ambito(Constante.TCrearUsuario, new ArrayList<Simbolo>()), t.beginLine, t.beginColumn);
        {if ("" != null) return usr;}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo RETORNO() throws ParseException {FNodoExpresion exp; Token t;
    t = jj_consume_token(T_RETORNO);
    exp = LOGICA_OR();
{if ("" != null) return new Simbolo(Constante.TRetorno, Constante.TRetorno, Constante.TRetorno, new Ambito(Constante.TRetorno, new ArrayList<Simbolo>()), exp, t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo ALTER() throws ParseException {Token t; FAlterarTabla at; FAlterarUsuario au;
    t = jj_consume_token(T_ALTERAR);
    if (jj_2_69(2)) {
      at = ALTER_TABLA();
at.Fila = t.beginLine; at.Columna = t.beginColumn; {if ("" != null) return new Simbolo(Constante.TAlterarTabla, Constante.TAlterarTabla, Constante.TAlterarTabla, at.Ambito, at, at.Fila, at.Columna);}
    } else if (jj_2_70(2)) {
      au = ALTER_USUARIO();
au.Fila = t.beginLine; au.Columna = t.beginColumn; {if ("" != null) return new Simbolo(Constante.TAlterarUsuario, Constante.TAlterarUsuario, Constante.TAlterarUsuario, au.Ambito, au, au.Fila, au.Columna);}
    } else if (jj_2_71(2)) {
      ALTER_OBJETO();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(PCOMA);
    throw new Error("Missing return statement in function");
  }

  final public FAlterarTabla ALTER_TABLA() throws ParseException {Token t, t2; ArrayList<ColumnaEstructura> lc;
    jj_consume_token(T_TABLA);
    t = jj_consume_token(ID);
    if (jj_2_72(2)) {
      t2 = jj_consume_token(T_AGREGAR);
      jj_consume_token(PAR_IZQ);
      lc = L_CAMPO();
      jj_consume_token(PAR_DER);
{if ("" != null) return new FAlterarTabla(Constante.TAgregar, t.image, new Ambito(t.image, new ArrayList<Simbolo>()), lc, t.beginLine, t.beginColumn);}
    } else if (jj_2_73(2)) {
      jj_consume_token(T_QUITAR);
      lc = L_ID();
{if ("" != null) return new FAlterarTabla(Constante.TQuitar, t.image, new Ambito(t.image, new ArrayList<Simbolo>()), lc, t.beginLine, t.beginColumn);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<ColumnaEstructura> L_ID() throws ParseException {Token t, t2; ArrayList<ColumnaEstructura> lce = new ArrayList<ColumnaEstructura>();
    t = jj_consume_token(ID);
ColumnaEstructura ce = new ColumnaEstructura();
            ce.NombreCampo = t.image;
            ce.Fila = t.beginLine;
            ce.Columna = t.beginColumn;
            lce.add(ce);
    label_2:
    while (true) {
      if (jj_2_74(2)) {
        ;
      } else {
        break label_2;
      }
      jj_consume_token(COMA);
      t2 = jj_consume_token(ID);
ColumnaEstructura ce2 = new ColumnaEstructura();
                                            ce2.NombreCampo = t2.image;
                                            ce2.Fila = t2.beginLine;
                                            ce2.Columna = t2.beginColumn;
                                            lce.add(ce2);
    }
{if ("" != null) return lce;}
    throw new Error("Missing return statement in function");
  }

  final public void ALTER_OBJETO() throws ParseException {
    jj_consume_token(T_OBJETO);
    jj_consume_token(ID);
    if (jj_2_75(2)) {
      jj_consume_token(T_AGREGAR);
      jj_consume_token(PAR_IZQ);
      L_ATRIBUTO();
      jj_consume_token(PAR_DER);
    } else if (jj_2_76(2)) {
      jj_consume_token(T_QUITAR);
      L_ID();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public FAlterarUsuario ALTER_USUARIO() throws ParseException {Token t, t2;
    jj_consume_token(T_USUARIO);
    t = jj_consume_token(ID);
    jj_consume_token(T_CAMBIAR);
    jj_consume_token(T_PASSWORD);
    jj_consume_token(IGUAL);
    t2 = jj_consume_token(CADENA);
{if ("" != null) return new FAlterarUsuario(t.image, t2.image.substring(1, t2.image.length() - 1), new Ambito(t.image, new ArrayList<Simbolo>()), t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo ELIMINAR() throws ParseException {Token t, t2;
    t2 = jj_consume_token(T_ELIMINAR);
    if (jj_2_77(2)) {
      jj_consume_token(T_TABLA);
      t = jj_consume_token(ID);
    } else if (jj_2_78(2)) {
      jj_consume_token(T_BASE_DATOS);
      t = jj_consume_token(ID);
    } else if (jj_2_79(2)) {
      jj_consume_token(T_OBJETO);
      t = jj_consume_token(ID);
    } else if (jj_2_80(2)) {
      jj_consume_token(T_USUARIO);
      t = jj_consume_token(ID);
FEliminarUsuario eu = new FEliminarUsuario(t.image, new Ambito(t.image, new ArrayList<Simbolo>()), t2.beginLine, t2.beginColumn);
                                            {if ("" != null) return new Simbolo(Constante.TEliminarUsuario, Constante.TEliminarUsuario, Constante.TEliminarUsuario, eu.Ambito, eu, eu.Fila, eu.Columna);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(PCOMA);
    throw new Error("Missing return statement in function");
  }

  final public Simbolo INSERTAR() throws ParseException {Token t,t2; ArrayList<FNodoExpresion> le; ArrayList<ColumnaEstructura> lid = new ArrayList<ColumnaEstructura>();
    t2 = jj_consume_token(T_INSERTAR);
    jj_consume_token(T_TABLA);
    t = jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    if (jj_2_81(2)) {
      lid = L_ID();
      jj_consume_token(PAR_DER);
      jj_consume_token(T_VALORES);
      jj_consume_token(PAR_IZQ);
    } else {
      ;
    }
    le = L_EXPRESIONES();
    jj_consume_token(PAR_DER);
    jj_consume_token(PCOMA);
if(lid.size()>0){
            FInsertarEspecial te = new FInsertarEspecial(t.image, lid, le, new Ambito(t.image, new ArrayList<Simbolo>()), t2.beginLine, t2.beginColumn);
            {if ("" != null) return new Simbolo(Constante.TInsertarEspecial, Constante.TInsertarEspecial, Constante.TInsertarEspecial, te.Ambito, te, te.Fila, te.Columna);}
        }else{
            FInsertarNormal tn = new FInsertarNormal(t.image, le, new Ambito(t.image, new ArrayList<Simbolo>()), t2.beginLine, t2.beginColumn);
            {if ("" != null) return new Simbolo(Constante.TInsertarNormal, Constante.TInsertarNormal, Constante.TInsertarNormal, tn.Ambito, tn, tn.Fila, tn.Columna);}
        }
    throw new Error("Missing return statement in function");
  }

  final public void ACTUALIZAR() throws ParseException {
    jj_consume_token(T_ACTUALIZAR);
    jj_consume_token(T_TABLA);
    jj_consume_token(ID);
    jj_consume_token(PAR_IZQ);
    L_ID();
    jj_consume_token(PAR_DER);
    jj_consume_token(T_VALORES);
    jj_consume_token(PAR_IZQ);
    L_EXPRESIONES();
    jj_consume_token(PAR_DER);
    if (jj_2_82(2)) {
      jj_consume_token(T_DONDE);
      LOGICA_OR();
    } else {
      ;
    }
    jj_consume_token(PCOMA);
  }

  final public void BORRAR() throws ParseException {
    jj_consume_token(T_BORRAR);
    jj_consume_token(T_TABLA);
    jj_consume_token(ID);
    if (jj_2_83(2)) {
      jj_consume_token(T_DONDE);
      LOGICA_OR();
    } else {
      ;
    }
    jj_consume_token(PCOMA);
  }

  final public void SELECCIONAR() throws ParseException {
    jj_consume_token(T_SELECCIONAR);
    if (jj_2_84(2)) {
      L_ID();
    } else if (jj_2_85(2)) {
      jj_consume_token(POR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(T_DE);
    L_ID();
    if (jj_2_86(2)) {
      jj_consume_token(T_DONDE);
      LOGICA_OR();
    } else {
      ;
    }
    if (jj_2_89(2)) {
      jj_consume_token(T_ORDENAR);
      jj_consume_token(ID);
      if (jj_2_87(2)) {
        jj_consume_token(T_ASC);
      } else if (jj_2_88(2)) {
        jj_consume_token(T_DESC);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      ;
    }
  }

  final public ArrayList<Simbolo> L_SENTENCIAS() throws ParseException {ArrayList<Simbolo> ls = new ArrayList<Simbolo>();
    if (jj_2_90(2)) {
      ls = L_SENTENCIA();
    } else {
      ;
    }
{if ("" != null) return ls;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> L_SENTENCIA() throws ParseException {ArrayList<Simbolo> ls = new ArrayList<Simbolo>(); ArrayList<Simbolo> ls2 = new ArrayList<Simbolo>();
    ls = SENTENCIA();
    if (jj_2_91(2)) {
      ls2 = L_SENTENCIA();
    } else {
      ;
    }
for(Simbolo sim : ls2){
            ls.add(sim);
        }
        {if ("" != null) return ls;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> SENTENCIA() throws ParseException {ArrayList<Simbolo> l = new ArrayList<Simbolo>();
    if (jj_2_92(2)) {
      l = SSL();
{if ("" != null) return l;}
    } else if (jj_2_93(2)) {
      l = DML();
{if ("" != null) return l;}
    } else if (jj_2_94(2)) {
      l = DCL();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return l;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<Simbolo> DECLARACION() throws ParseException {ArrayList<FDeclaracion> lv = new ArrayList<FDeclaracion>(); Token t,t2; String td; FNodoExpresion val = null;
    t2 = jj_consume_token(T_DECLARAR);
    lv = L_VARIABLE();
    if (jj_2_96(2)) {
      td = TIPO_DATO_ATRIBUTO();
      if (jj_2_95(2)) {
        jj_consume_token(IGUAL);
        val = LOGICA_OR();
      } else {
        ;
      }
    } else if (jj_2_97(2)) {
      t = jj_consume_token(ID);
td = t.image;
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(PCOMA);
ArrayList<Simbolo> lista = new ArrayList<Simbolo>();
                                                        for(FDeclaracion d : lv){
                                                            d.Tipo = td;
                                                            d.Valor = val;
                                                            Simbolo s = new Simbolo(d.Tipo, d.Nombre, Constante.TDeclaracion, new Ambito(Constante.TDeclaracion, new ArrayList<Simbolo>()), d, t2.beginLine, t2.beginColumn);
                                                            lista.add(s);
                                                        }
                                                        {if ("" != null) return lista;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<FDeclaracion> L_VARIABLE() throws ParseException {ArrayList<FDeclaracion> lv = new ArrayList<FDeclaracion>(); ArrayList<FDeclaracion> lv2 = new ArrayList<FDeclaracion>(); Token t;
    t = jj_consume_token(ARROBA);
lv.add(new FDeclaracion("", t.image.substring(1, t.image.length()), new Ambito(Constante.TDeclaracion, new ArrayList<Simbolo>()), null, t.beginLine, t.beginColumn));
    if (jj_2_98(2)) {
      jj_consume_token(COMA);
      lv2 = L_VARIABLE();
for(FDeclaracion s : lv2){
                                                                                            lv.add(s);
                                                                                        }
    } else {
      ;
    }
{if ("" != null) return lv;}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo ASIGNACION() throws ParseException {Token t; Token t2 = null; FNodoExpresion e;
    t = jj_consume_token(ARROBA);
    if (jj_2_99(2)) {
      jj_consume_token(PUNTO);
      t2 = jj_consume_token(ID);
    } else {
      ;
    }
    jj_consume_token(IGUAL);
    e = LOGICA_OR();
    jj_consume_token(PCOMA);
FLlamadaVariable fv;
                                                                    if(t2 != null){
                                                                        fv = new FLlamadaVariable(t2.image, t.image.substring(1, t.image.length()), t.beginLine, t.beginColumn);
                                                                    }else{
                                                                        fv = new FLlamadaVariable(t.image.substring(1, t.image.length()), "", t.beginLine, t.beginColumn);
                                                                    }

                                                                    FAsignacion as = new FAsignacion(fv, new Ambito(Constante.TAsignacion, new ArrayList<Simbolo>()), e, t.beginLine, t.beginColumn);
                                                                    {if ("" != null) return new Simbolo(Constante.TAsignacion, Constante.TAsignacion, Constante.TAsignacion, as.Ambito, as, t.beginLine, t.beginColumn);}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo SI() throws ParseException {Token t; FNodoExpresion condicion; ArrayList<Simbolo> asi = new ArrayList<Simbolo>(); ArrayList<Simbolo> asino = new ArrayList<Simbolo>();
    t = jj_consume_token(T_SI);
    jj_consume_token(PAR_IZQ);
    condicion = LOGICA_OR();
    jj_consume_token(PAR_DER);
    jj_consume_token(LLAVE_IZQ);
    asi = L_SENTENCIAS();
    jj_consume_token(LLAVE_DER);
    if (jj_2_100(2)) {
      jj_consume_token(T_SINO);
      jj_consume_token(LLAVE_IZQ);
      asino = L_SENTENCIAS();
      jj_consume_token(LLAVE_DER);
    } else {
      ;
    }
Ambito ambitosi = new Ambito(Constante.TSi, asi);
        Ambito ambitosino = new Ambito(Constante.TSi, asino);
        Ambito ambito = new Ambito(Constante.TSi, new ArrayList<Simbolo>());

        for(Simbolo sim: ambitosi.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }

        for(Simbolo sim: ambitosino.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }

        FSi fs = new FSi(condicion, ambitosi, ambitosino, ambito);
        Simbolo s = new Simbolo(Constante.TSi, Constante.TSi, Constante.TSi, fs.Ambito, fs, t.beginLine, t.beginColumn);
        {if ("" != null) return s;}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo SELECCIONA() throws ParseException {Token t; FNodoExpresion exp; ArrayList<FCaso> lc = new ArrayList<FCaso>(); FCaso defecto= null;
    t = jj_consume_token(T_SELECCIONA);
    jj_consume_token(PAR_IZQ);
    exp = LOGICA_OR();
    jj_consume_token(PAR_DER);
    jj_consume_token(LLAVE_IZQ);
    lc = L_CASOS();
    if (jj_2_101(2)) {
      defecto = DEFECTO();
    } else {
      ;
    }
    jj_consume_token(LLAVE_DER);
Ambito ambito = new Ambito(Constante.TSeleccion, new ArrayList<Simbolo>());
        for(FCaso caso: lc){
            for(Simbolo sim: caso.Ambito.TablaSimbolo){
                sim.Ambito.Padre = ambito;
            }
        }
        if(defecto != null){
            for(Simbolo sim: defecto.Ambito.TablaSimbolo){
                    sim.Ambito.Padre = ambito;
            }
        }
        FSelecciona fs = new FSelecciona(exp,lc,defecto,ambito);
        Simbolo s = new Simbolo(Constante.TSeleccion, Constante.TSeleccion, Constante.TSeleccion, fs.Ambito, fs, t.beginLine, t.beginColumn);
        {if ("" != null) return s;}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<FCaso> L_CASOS() throws ParseException {Token t; FNodoExpresion p; ArrayList<Simbolo> ls; ArrayList<FCaso> lc2 = new ArrayList<FCaso>();
    t = jj_consume_token(T_CASO);
    p = VALOR_CASO();
    jj_consume_token(DOSP);
    ls = L_SENTENCIAS();
    if (jj_2_102(2)) {
      lc2 = L_CASOS();
    } else {
      ;
    }
Ambito ambito = new Ambito(Constante.TCaso, ls);
        for(Simbolo sim : ambito.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }
        FCaso caso = new FCaso(p, ambito);
        ArrayList<FCaso> lc = new ArrayList<FCaso>();
        lc.add(caso);

        for(FCaso ca : lc2){
            lc.add(ca);
        }

        {if ("" != null) return lc;}
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion VALOR_CASO() throws ParseException {Token t;
    if (jj_2_103(2)) {
      t = jj_consume_token(CADENA);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TText, Constante.TText, t.beginLine, t.beginColumn, t.image.substring(1, t.image.length()));}
    } else if (jj_2_104(2)) {
      t = jj_consume_token(ENTERO);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TEntero, Constante.TEntero, t.beginLine, t.beginColumn, t.image);}
    } else if (jj_2_105(2)) {
      t = jj_consume_token(DECIMAL);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TDecimal, Constante.TDecimal, t.beginLine, t.beginColumn, t.image);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public FCaso DEFECTO() throws ParseException {ArrayList<Simbolo> c;
    jj_consume_token(T_DEFECTO);
    jj_consume_token(DOSP);
    c = L_SENTENCIAS();
Ambito ambito = new Ambito(Constante.TCaso, c);
        for(Simbolo sim : ambito.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }
        FCaso caso = new FCaso(null, ambito);
        {if ("" != null) return caso;}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo PARA() throws ParseException {Token t,t2;; Simbolo dp; FNodoExpresion exp; String c=Constante.TAumento; ArrayList<Simbolo> ls;
    t = jj_consume_token(T_PARA);
    jj_consume_token(PAR_IZQ);
    dp = DECLARACION_PARA();
    jj_consume_token(PCOMA);
    exp = LOGICA_OR();
    jj_consume_token(PCOMA);
    if (jj_2_106(2)) {
      t2 = jj_consume_token(AUMENTO);
    } else if (jj_2_107(2)) {
      t2 = jj_consume_token(DECREMENTO);
c=Constante.TDecremento;
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(PAR_DER);
    jj_consume_token(LLAVE_IZQ);
    ls = L_SENTENCIAS();
    jj_consume_token(LLAVE_DER);
Ambito ambito = new Ambito(Constante.TPara, ls);
        for(Simbolo sim: ambito.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }
        FPara fp = new FPara(dp,exp, c, ambito);
        Simbolo s = new Simbolo(Constante.TPara, Constante.TPara, Constante.TPara, fp.Ambito, fp, t.beginLine, t.beginColumn);
        {if ("" != null) return s;}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo DECLARACION_PARA() throws ParseException {Token t,t2; FNodoExpresion exp;
    t2 = jj_consume_token(T_DECLARAR);
    t = jj_consume_token(ARROBA);
    jj_consume_token(T_INTEGER);
    jj_consume_token(IGUAL);
    exp = LOGICA_OR();
FDeclaracion fd = new FDeclaracion(Constante.TEntero, t.image.substring(1,t.image.length()), new Ambito(Constante.TDeclaracion, new ArrayList<Simbolo>()), exp, t.beginLine, t.beginColumn);
        Simbolo s = new Simbolo(fd.Tipo, fd.Nombre, Constante.TDeclaracion, new Ambito(Constante.TDeclaracion, new ArrayList<Simbolo>()), fd, t2.beginLine, t2.beginColumn);
        {if ("" != null) return s;}
    throw new Error("Missing return statement in function");
  }

  final public Simbolo MIENTRAS() throws ParseException {ArrayList<Simbolo> c; FNodoExpresion exp; Token t;
    t = jj_consume_token(T_MIENTRAS);
    jj_consume_token(PAR_IZQ);
    exp = LOGICA_OR();
    jj_consume_token(PAR_DER);
    jj_consume_token(LLAVE_IZQ);
    c = L_SENTENCIAS();
    jj_consume_token(LLAVE_DER);
Ambito ambito = new Ambito(Constante.TMientras, c);
        for(Simbolo sim: ambito.TablaSimbolo){
            sim.Ambito.Padre = ambito;
        }
        FMientras m = new FMientras(exp, ambito);
        Simbolo s = new Simbolo(Constante.TMientras, Constante.TMientras, Constante.TMientras, m.Ambito, m, t.beginLine, t.beginColumn);
        {if ("" != null) return s;}
    throw new Error("Missing return statement in function");
  }

  final public void BACKUP() throws ParseException {
    if (jj_2_108(2)) {
      jj_consume_token(T_BACKUP_USQL);
    } else if (jj_2_109(2)) {
      jj_consume_token(T_BACKUP_COMPLETO);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(ID);
    jj_consume_token(ID);
    jj_consume_token(PCOMA);
  }

  final public void RESTAURAR() throws ParseException {
    if (jj_2_110(2)) {
      jj_consume_token(T_RESTAURAR_USQL);
    } else if (jj_2_111(2)) {
      jj_consume_token(T_RESTAURAR_COMPLETO);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(CADENA);
    jj_consume_token(PCOMA);
  }

  final public void FUNCINES_NATIVAS_VALOR() throws ParseException {
    if (jj_2_112(2)) {
      jj_consume_token(T_FECHA);
      jj_consume_token(PAR_IZQ);
      jj_consume_token(PAR_DER);
    } else if (jj_2_113(2)) {
      jj_consume_token(T_FECHA_HORA);
      jj_consume_token(PAR_IZQ);
      jj_consume_token(PAR_DER);
    } else if (jj_2_114(2)) {
      jj_consume_token(T_CONTAR);
      jj_consume_token(PAR_IZQ);
      jj_consume_token(FLECHA_IZQ);
      SELECCIONAR();
      jj_consume_token(FLECHA_DER);
      jj_consume_token(PAR_DER);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public FNodoExpresion LLAMADA_OBJETO() throws ParseException {Token t = null; Token t2 = null; Token t3 = null; ArrayList<FNodoExpresion> le = new ArrayList<FNodoExpresion>();
    //LLAMADA A COLUMNA, TABLA.COLUMNA O FUNCION
        t = jj_consume_token(ID);
    if (jj_2_119(2)) {
      if (jj_2_117(2)) {
        jj_consume_token(PAR_IZQ);
        if (jj_2_115(2)) {
          le = L_EXPRESIONES();
        } else {
          ;
        }
        jj_consume_token(PAR_DER);
FLlamadaMetodo lm = new FLlamadaMetodo(t.image, le, t.beginLine, t.beginColumn);
                                                              {if ("" != null) return new FNodoExpresion(null, null, Constante.TMetodo, Constante.TMetodo, t.beginLine, t.beginColumn, lm);}
      } else if (jj_2_118(2)) {
        jj_consume_token(PUNTO);
        t2 = jj_consume_token(ID);
        if (jj_2_116(2)) {
          jj_consume_token(PUNTO);
          t3 = jj_consume_token(ID);
        } else {
          ;
        }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else {
      ;
    }
FLlamadaTabla lt;
                                                        if(t3 != null){
                                                            lt = new FLlamadaTabla(t.image, t2.image, t3.image, t.beginLine, t.beginColumn);
                                                        }else if(t2 != null){
                                                            lt = new FLlamadaTabla(t.image, "", t2.image, t.beginLine, t.beginColumn);
                                                        }else{
                                                            lt = new FLlamadaTabla("", "", t.image, t.beginLine, t.beginColumn);
                                                        }
                                                        {if ("" != null) return new FNodoExpresion(null, null, Constante.TTabla, Constante.TTabla, t.beginLine, t.beginColumn, lt);}
    throw new Error("Missing return statement in function");
  }

  final public ArrayList<FNodoExpresion> L_EXPRESIONES() throws ParseException {FNodoExpresion exp; ArrayList<FNodoExpresion> le = new ArrayList<FNodoExpresion>(); ArrayList<FNodoExpresion> le2 = new ArrayList<FNodoExpresion>();
    exp = LOGICA_OR();
    if (jj_2_120(2)) {
      jj_consume_token(COMA);
      le2 = L_EXPRESIONES();
    } else {
      ;
    }
le.add(exp);
                                                        for(FNodoExpresion n : le2){
                                                            le.add(n);
                                                        }
                                                        {if ("" != null) return le;}
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion LOGICA_OR() throws ParseException {FNodoExpresion izq, der; Token t; FNodoExpresion nuevo = null;
    izq = LOGICA_AND();
    label_3:
    while (true) {
      if (jj_2_121(2)) {
        ;
      } else {
        break label_3;
      }
      t = jj_consume_token(OR);
      der = LOGICA_AND();
nuevo = new FNodoExpresion(izq, der, Constante.TOr, Constante.TOr, t.beginLine, t.beginColumn, null);
    }
if(nuevo == null){
                                        {if ("" != null) return izq;}
                                    }else{
                                        {if ("" != null) return nuevo;}
                                    }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion LOGICA_AND() throws ParseException {FNodoExpresion izq, der; Token t; FNodoExpresion nuevo = null;
    izq = LOGICA_NOT();
    label_4:
    while (true) {
      if (jj_2_122(2)) {
        ;
      } else {
        break label_4;
      }
      t = jj_consume_token(AND);
      der = LOGICA_NOT();
nuevo = new FNodoExpresion(izq, der, Constante.TAnd, Constante.TAnd, t.beginLine, t.beginColumn, null);
    }
if(nuevo == null){
                                        {if ("" != null) return izq;}
                                    }else{
                                        {if ("" != null) return nuevo;}
                                    }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion LOGICA_NOT() throws ParseException {FNodoExpresion der; Token t = null;
    if (jj_2_123(2)) {
      t = jj_consume_token(NOT);
    } else {
      ;
    }
    der = RELACIONAL();
if(t != null){
                                    {if ("" != null) return new FNodoExpresion(null, der, Constante.TNot, Constante.TNot, t.beginLine, t.beginColumn, null);}
                                }else{
                                    {if ("" != null) return der;}
                                }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion RELACIONAL() throws ParseException {FNodoExpresion izq, der; Token t; FNodoExpresion nuevo = null;
    izq = E();
    label_5:
    while (true) {
      if (jj_2_124(2)) {
        ;
      } else {
        break label_5;
      }
      if (jj_2_125(2)) {
        t = jj_consume_token(IGUALACION);
        der = E();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TIgualacion, Constante.TIgualacion, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TIgualacion, Constante.TIgualacion, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_126(2)) {
        t = jj_consume_token(DIFERENCIACION);
        der = E();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TDiferenciacion, Constante.TDiferenciacion, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TDiferenciacion, Constante.TDiferenciacion, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_127(2)) {
        t = jj_consume_token(MAYOR);
        der = E();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TMayor, Constante.TMayor, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TMayor, Constante.TMayor, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_128(2)) {
        t = jj_consume_token(MENOR);
        der = E();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TMenor, Constante.TMenos, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TMenor, Constante.TMenos, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_129(2)) {
        t = jj_consume_token(MAYORIGUAL);
        der = E();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TMayorIgual, Constante.TMayorIgual, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TMayorIgual, Constante.TMayorIgual, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_130(2)) {
        t = jj_consume_token(MENORIGUAL);
        der = E();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TMenorIgual, Constante.TMenorIgual, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TMenorIgual, Constante.TMenorIgual, t.beginLine, t.beginColumn, null);
                                                }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
if(nuevo == null){
                                        {if ("" != null) return izq;}
                                    }else{
                                        {if ("" != null) return nuevo;}
                                    }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion E() throws ParseException {FNodoExpresion izq, der; Token t; FNodoExpresion nuevo = null;
    izq = T();
    label_6:
    while (true) {
      if (jj_2_131(2)) {
        ;
      } else {
        break label_6;
      }
      if (jj_2_132(2)) {
        t = jj_consume_token(MAS);
        der = T();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TMas, Constante.TMas, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TMas, Constante.TMas, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_133(2)) {
        t = jj_consume_token(MENOS);
        der = T();
if(nuevo != null){
                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TMenos, Constante.TMenos, t.beginLine, t.beginColumn, null);
                                }else{
                                    nuevo = new FNodoExpresion(izq, der, Constante.TMenos, Constante.TMenos, t.beginLine, t.beginColumn, null);
                                }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
if(nuevo == null){
                                        {if ("" != null) return izq;}
                                    }else{
                                        {if ("" != null) return nuevo;}
                                    }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion T() throws ParseException {FNodoExpresion izq, der; Token t; FNodoExpresion nuevo = null;
    izq = G();
    label_7:
    while (true) {
      if (jj_2_134(2)) {
        ;
      } else {
        break label_7;
      }
      if (jj_2_135(2)) {
        t = jj_consume_token(POR);
        der = G();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TPor, Constante.TPor, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TPor, Constante.TPor, t.beginLine, t.beginColumn, null);
                                                }
      } else if (jj_2_136(2)) {
        t = jj_consume_token(DIVISION);
        der = G();
if(nuevo != null){
                                                    nuevo = new FNodoExpresion(nuevo, der, Constante.TDivision, Constante.TDivision, t.beginLine, t.beginColumn, null);
                                                }else{
                                                    nuevo = new FNodoExpresion(izq, der, Constante.TDivision, Constante.TDivision, t.beginLine, t.beginColumn, null);
                                                }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
if(nuevo == null){
                                        {if ("" != null) return izq;}
                                    }else{
                                        {if ("" != null) return nuevo;}
                                    }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion G() throws ParseException {FNodoExpresion der; Token t = null; FNodoExpresion nuevo = null;
    if (jj_2_137(2)) {
      t = jj_consume_token(MENOS);
    } else {
      ;
    }
    der = H();
if(t != null){
                                    {if ("" != null) return new FNodoExpresion(null, der, Constante.TMenos, Constante.TMenos, t.beginLine, t.beginColumn, null);}
                                }else{
                                    {if ("" != null) return der;}
                                }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion H() throws ParseException {FNodoExpresion izq, der; Token t; FNodoExpresion nuevo = null;
    izq = I();
    label_8:
    while (true) {
      if (jj_2_138(2)) {
        ;
      } else {
        break label_8;
      }
      t = jj_consume_token(POTENCIA);
      der = I();
nuevo = new FNodoExpresion(izq, der, Constante.TPotencia, Constante.TPotencia, t.beginLine, t.beginColumn, null);
    }
if(nuevo == null){
                                        {if ("" != null) return izq;}
                                    }else{
                                        {if ("" != null) return nuevo;}
                                    }
    throw new Error("Missing return statement in function");
  }

  final public FNodoExpresion I() throws ParseException {Token t; Token t2 = null; String c=""; String c2 = ""; FNodoExpresion n;
    if (jj_2_140(2)) {
      t = jj_consume_token(CADENA);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TText, Constante.TText, t.beginLine, t.beginColumn, t.image.substring(1, t.image.length() - 1));}
    } else if (jj_2_141(2)) {
      t = jj_consume_token(ENTERO);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TEntero, Constante.TEntero, t.beginLine, t.beginColumn, t.image);}
    } else if (jj_2_142(2)) {
      t = jj_consume_token(DECIMAL);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TDecimal, Constante.TDecimal, t.beginLine, t.beginColumn, t.image);}
    } else if (jj_2_143(2)) {
      t = jj_consume_token(DATE);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TDate, Constante.TDateTime, t.beginLine, t.beginColumn, t.image.substring(1, t.image.length() - 1));}
    } else if (jj_2_144(2)) {
      t = jj_consume_token(DATETIME);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TDateTime, Constante.TDateTime, t.beginLine, t.beginColumn, t.image.substring(1, t.image.length() - 1));}
    } else if (jj_2_145(2)) {
      t = jj_consume_token(FALSO);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TBool, Constante.TBool, t.beginLine, t.beginColumn, t.image);}
    } else if (jj_2_146(2)) {
      t = jj_consume_token(VERDADERO);
{if ("" != null) return new FNodoExpresion(null, null, Constante.TBool, Constante.TBool, t.beginLine, t.beginColumn, t.image);}
    } else if (jj_2_147(2)) {
      t = jj_consume_token(ARROBA);
      if (jj_2_139(2)) {
        jj_consume_token(PUNTO);
        t2 = jj_consume_token(ID);
      } else {
        ;
      }
FLlamadaVariable fv;
                                        if(t2 != null){
                                            fv = new FLlamadaVariable(t2.image, t.image.substring(1, t.image.length()), t.beginLine, t.beginColumn);
                                        }else{
                                            fv = new FLlamadaVariable(t.image.substring(1, t.image.length()), "", t.beginLine, t.beginColumn);
                                        }
                                        {if ("" != null) return new FNodoExpresion(null, null, Constante.TVariable, Constante.TVariable, t.beginLine, t.beginColumn, fv);}
    } else if (jj_2_148(2)) {
      n = LLAMADA_OBJETO();
{if ("" != null) return n;}
    } else if (jj_2_149(2)) {
      jj_consume_token(PAR_IZQ);
      n = LOGICA_OR();
      jj_consume_token(PAR_DER);
{if ("" != null) return n;}
    } else if (jj_2_150(2)) {
      FUNCINES_NATIVAS_VALOR();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_22(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_23(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_24(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_25(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_26(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_27(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_28(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_29(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_30(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_2_31(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_31(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private boolean jj_2_32(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_32(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private boolean jj_2_33(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_33(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private boolean jj_2_34(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_34(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private boolean jj_2_35(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_35(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private boolean jj_2_36(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_36(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private boolean jj_2_37(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_37(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private boolean jj_2_38(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_38(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private boolean jj_2_39(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_39(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private boolean jj_2_40(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_40(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private boolean jj_2_41(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_41(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private boolean jj_2_42(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_42(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private boolean jj_2_43(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_43(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private boolean jj_2_44(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_44(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private boolean jj_2_45(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_45(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  private boolean jj_2_46(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_46(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  private boolean jj_2_47(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_47(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  private boolean jj_2_48(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_48(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  private boolean jj_2_49(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_49(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  private boolean jj_2_50(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_50(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  private boolean jj_2_51(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_51(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  private boolean jj_2_52(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_52(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  private boolean jj_2_53(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_53(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  private boolean jj_2_54(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_54(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  private boolean jj_2_55(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_55(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  private boolean jj_2_56(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_56(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  private boolean jj_2_57(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_57(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  private boolean jj_2_58(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_58(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  private boolean jj_2_59(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_59(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  private boolean jj_2_60(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_60(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  private boolean jj_2_61(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_61(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  private boolean jj_2_62(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_62(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  private boolean jj_2_63(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_63(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  private boolean jj_2_64(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_64(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  private boolean jj_2_65(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_65(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  private boolean jj_2_66(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_66(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(65, xla); }
  }

  private boolean jj_2_67(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_67(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(66, xla); }
  }

  private boolean jj_2_68(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_68(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(67, xla); }
  }

  private boolean jj_2_69(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_69(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(68, xla); }
  }

  private boolean jj_2_70(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_70(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(69, xla); }
  }

  private boolean jj_2_71(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_71(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(70, xla); }
  }

  private boolean jj_2_72(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_72(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(71, xla); }
  }

  private boolean jj_2_73(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_73(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(72, xla); }
  }

  private boolean jj_2_74(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_74(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(73, xla); }
  }

  private boolean jj_2_75(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_75(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(74, xla); }
  }

  private boolean jj_2_76(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_76(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(75, xla); }
  }

  private boolean jj_2_77(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_77(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(76, xla); }
  }

  private boolean jj_2_78(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_78(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(77, xla); }
  }

  private boolean jj_2_79(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_79(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(78, xla); }
  }

  private boolean jj_2_80(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_80(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(79, xla); }
  }

  private boolean jj_2_81(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_81(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(80, xla); }
  }

  private boolean jj_2_82(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_82(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(81, xla); }
  }

  private boolean jj_2_83(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_83(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(82, xla); }
  }

  private boolean jj_2_84(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_84(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(83, xla); }
  }

  private boolean jj_2_85(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_85(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(84, xla); }
  }

  private boolean jj_2_86(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_86(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(85, xla); }
  }

  private boolean jj_2_87(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_87(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(86, xla); }
  }

  private boolean jj_2_88(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_88(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(87, xla); }
  }

  private boolean jj_2_89(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_89(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(88, xla); }
  }

  private boolean jj_2_90(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_90(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(89, xla); }
  }

  private boolean jj_2_91(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_91(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(90, xla); }
  }

  private boolean jj_2_92(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_92(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(91, xla); }
  }

  private boolean jj_2_93(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_93(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(92, xla); }
  }

  private boolean jj_2_94(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_94(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(93, xla); }
  }

  private boolean jj_2_95(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_95(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(94, xla); }
  }

  private boolean jj_2_96(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_96(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(95, xla); }
  }

  private boolean jj_2_97(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_97(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(96, xla); }
  }

  private boolean jj_2_98(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_98(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(97, xla); }
  }

  private boolean jj_2_99(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_99(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(98, xla); }
  }

  private boolean jj_2_100(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_100(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(99, xla); }
  }

  private boolean jj_2_101(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_101(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(100, xla); }
  }

  private boolean jj_2_102(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_102(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(101, xla); }
  }

  private boolean jj_2_103(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_103(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(102, xla); }
  }

  private boolean jj_2_104(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_104(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(103, xla); }
  }

  private boolean jj_2_105(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_105(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(104, xla); }
  }

  private boolean jj_2_106(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_106(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(105, xla); }
  }

  private boolean jj_2_107(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_107(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(106, xla); }
  }

  private boolean jj_2_108(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_108(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(107, xla); }
  }

  private boolean jj_2_109(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_109(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(108, xla); }
  }

  private boolean jj_2_110(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_110(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(109, xla); }
  }

  private boolean jj_2_111(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_111(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(110, xla); }
  }

  private boolean jj_2_112(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_112(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(111, xla); }
  }

  private boolean jj_2_113(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_113(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(112, xla); }
  }

  private boolean jj_2_114(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_114(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(113, xla); }
  }

  private boolean jj_2_115(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_115(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(114, xla); }
  }

  private boolean jj_2_116(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_116(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(115, xla); }
  }

  private boolean jj_2_117(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_117(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(116, xla); }
  }

  private boolean jj_2_118(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_118(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(117, xla); }
  }

  private boolean jj_2_119(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_119(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(118, xla); }
  }

  private boolean jj_2_120(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_120(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(119, xla); }
  }

  private boolean jj_2_121(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_121(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(120, xla); }
  }

  private boolean jj_2_122(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_122(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(121, xla); }
  }

  private boolean jj_2_123(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_123(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(122, xla); }
  }

  private boolean jj_2_124(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_124(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(123, xla); }
  }

  private boolean jj_2_125(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_125(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(124, xla); }
  }

  private boolean jj_2_126(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_126(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(125, xla); }
  }

  private boolean jj_2_127(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_127(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(126, xla); }
  }

  private boolean jj_2_128(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_128(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(127, xla); }
  }

  private boolean jj_2_129(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_129(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(128, xla); }
  }

  private boolean jj_2_130(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_130(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(129, xla); }
  }

  private boolean jj_2_131(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_131(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(130, xla); }
  }

  private boolean jj_2_132(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_132(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(131, xla); }
  }

  private boolean jj_2_133(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_133(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(132, xla); }
  }

  private boolean jj_2_134(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_134(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(133, xla); }
  }

  private boolean jj_2_135(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_135(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(134, xla); }
  }

  private boolean jj_2_136(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_136(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(135, xla); }
  }

  private boolean jj_2_137(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_137(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(136, xla); }
  }

  private boolean jj_2_138(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_138(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(137, xla); }
  }

  private boolean jj_2_139(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_139(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(138, xla); }
  }

  private boolean jj_2_140(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_140(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(139, xla); }
  }

  private boolean jj_2_141(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_141(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(140, xla); }
  }

  private boolean jj_2_142(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_142(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(141, xla); }
  }

  private boolean jj_2_143(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_143(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(142, xla); }
  }

  private boolean jj_2_144(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_144(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(143, xla); }
  }

  private boolean jj_2_145(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_145(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(144, xla); }
  }

  private boolean jj_2_146(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_146(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(145, xla); }
  }

  private boolean jj_2_147(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_147(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(146, xla); }
  }

  private boolean jj_2_148(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_148(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(147, xla); }
  }

  private boolean jj_2_149(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_149(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(148, xla); }
  }

  private boolean jj_2_150(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_150(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(149, xla); }
  }

  private boolean jj_3R_41()
 {
    if (jj_3R_64()) return true;
    return false;
  }

  private boolean jj_3_101()
 {
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_35()
 {
    if (jj_scan_token(T_OBJETO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_102()
 {
    if (jj_3R_52()) return true;
    return false;
  }

  private boolean jj_3_100()
 {
    if (jj_scan_token(T_SINO)) return true;
    if (jj_scan_token(LLAVE_IZQ)) return true;
    return false;
  }

  private boolean jj_3_58()
 {
    if (jj_scan_token(T_LLAVE_FORANEA)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_57()
 {
    if (jj_scan_token(T_LLAVE_PRIMARIA)) return true;
    return false;
  }

  private boolean jj_3_53()
 {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3_56()
 {
    if (jj_scan_token(T_AUTOINCREMETABLE)) return true;
    return false;
  }

  private boolean jj_3_55()
 {
    if (jj_scan_token(T_NO_NULO)) return true;
    return false;
  }

  private boolean jj_3_54()
 {
    if (jj_scan_token(T_NULO)) return true;
    return false;
  }

  private boolean jj_3R_63()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_54()) {
    jj_scanpos = xsp;
    if (jj_3_55()) {
    jj_scanpos = xsp;
    if (jj_3_56()) {
    jj_scanpos = xsp;
    if (jj_3_57()) {
    jj_scanpos = xsp;
    if (jj_3_58()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_29()
 {
    if (jj_scan_token(T_PARA)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3R_40()
 {
    if (jj_3R_63()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_53()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_51()
 {
    if (jj_scan_token(T_DEFECTO)) return true;
    if (jj_scan_token(DOSP)) return true;
    return false;
  }

  private boolean jj_3_52()
 {
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_105()
 {
    if (jj_scan_token(DECIMAL)) return true;
    return false;
  }

  private boolean jj_3_51()
 {
    if (jj_scan_token(T_DATETIME)) return true;
    return false;
  }

  private boolean jj_3_45()
 {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3_104()
 {
    if (jj_scan_token(ENTERO)) return true;
    return false;
  }

  private boolean jj_3_50()
 {
    if (jj_scan_token(T_DATE)) return true;
    return false;
  }

  private boolean jj_3_49()
 {
    if (jj_scan_token(T_BOOL)) return true;
    return false;
  }

  private boolean jj_3R_67()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_103()) {
    jj_scanpos = xsp;
    if (jj_3_104()) {
    jj_scanpos = xsp;
    if (jj_3_105()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_48()
 {
    if (jj_scan_token(T_DOUBLE)) return true;
    return false;
  }

  private boolean jj_3_103()
 {
    if (jj_scan_token(CADENA)) return true;
    return false;
  }

  private boolean jj_3_47()
 {
    if (jj_scan_token(T_INTEGER)) return true;
    return false;
  }

  private boolean jj_3_44()
 {
    if (jj_scan_token(COMA)) return true;
    if (jj_3R_39()) return true;
    return false;
  }

  private boolean jj_3R_62()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_46()) {
    jj_scanpos = xsp;
    if (jj_3_47()) {
    jj_scanpos = xsp;
    if (jj_3_48()) {
    jj_scanpos = xsp;
    if (jj_3_49()) {
    jj_scanpos = xsp;
    if (jj_3_50()) {
    jj_scanpos = xsp;
    if (jj_3_51()) {
    jj_scanpos = xsp;
    if (jj_3_52()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_46()
 {
    if (jj_scan_token(T_TEXT)) return true;
    return false;
  }

  private boolean jj_3R_52()
 {
    if (jj_scan_token(T_CASO)) return true;
    if (jj_3R_67()) return true;
    return false;
  }

  private boolean jj_3R_39()
 {
    if (jj_3R_62()) return true;
    return false;
  }

  private boolean jj_3R_34()
 {
    if (jj_scan_token(T_TABLA)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_43()
 {
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3_42()
 {
    if (jj_3R_37()) return true;
    return false;
  }

  private boolean jj_3_40()
 {
    if (jj_3R_36()) return true;
    return false;
  }

  private boolean jj_3_39()
 {
    if (jj_3R_35()) return true;
    return false;
  }

  private boolean jj_3_23()
 {
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_28()
 {
    if (jj_scan_token(T_SELECCIONA)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_38()
 {
    if (jj_3R_34()) return true;
    return false;
  }

  private boolean jj_3_37()
 {
    if (jj_3R_33()) return true;
    return false;
  }

  private boolean jj_3_21()
 {
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_33()
 {
    if (jj_scan_token(T_BASE_DATOS)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_41()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_37()) {
    jj_scanpos = xsp;
    if (jj_3_38()) {
    jj_scanpos = xsp;
    if (jj_3_39()) {
    jj_scanpos = xsp;
    if (jj_3_40()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_88()
 {
    if (jj_scan_token(T_DESC)) return true;
    return false;
  }

  private boolean jj_3_36()
 {
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3_22()
 {
    if (jj_scan_token(POR)) return true;
    return false;
  }

  private boolean jj_3_95()
 {
    if (jj_scan_token(IGUAL)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3_20()
 {
    if (jj_scan_token(POR)) return true;
    return false;
  }

  private boolean jj_3_82()
 {
    if (jj_scan_token(T_DONDE)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3_87()
 {
    if (jj_scan_token(T_ASC)) return true;
    return false;
  }

  private boolean jj_3R_17()
 {
    if (jj_scan_token(T_CREAR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_41()) {
    jj_scanpos = xsp;
    if (jj_3_42()) {
    jj_scanpos = xsp;
    if (jj_3_43()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_27()
 {
    if (jj_scan_token(T_SI)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3R_15()
 {
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_99()
 {
    if (jj_scan_token(PUNTO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_35()
 {
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3_89()
 {
    if (jj_scan_token(T_ORDENAR)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_34()
 {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3_33()
 {
    if (jj_3R_16()) return true;
    return false;
  }

  private boolean jj_3_32()
 {
    if (jj_scan_token(T_DETENER)) return true;
    if (jj_scan_token(PCOMA)) return true;
    return false;
  }

  private boolean jj_3_96()
 {
    if (jj_3R_49()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_95()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_31()
 {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3_30()
 {
    if (jj_3R_29()) return true;
    return false;
  }

  private boolean jj_3_29()
 {
    if (jj_3R_28()) return true;
    return false;
  }

  private boolean jj_3_28()
 {
    if (jj_3R_27()) return true;
    return false;
  }

  private boolean jj_3_27()
 {
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3R_26()
 {
    if (jj_scan_token(ARROBA)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_99()) jj_scanpos = xsp;
    if (jj_scan_token(IGUAL)) return true;
    return false;
  }

  private boolean jj_3R_13()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_26()) {
    jj_scanpos = xsp;
    if (jj_3_27()) {
    jj_scanpos = xsp;
    if (jj_3_28()) {
    jj_scanpos = xsp;
    if (jj_3_29()) {
    jj_scanpos = xsp;
    if (jj_3_30()) {
    jj_scanpos = xsp;
    if (jj_3_31()) {
    jj_scanpos = xsp;
    if (jj_3_32()) {
    jj_scanpos = xsp;
    if (jj_3_33()) {
    jj_scanpos = xsp;
    if (jj_3_34()) {
    jj_scanpos = xsp;
    if (jj_3_35()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_26()
 {
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3_25()
 {
    if (jj_scan_token(T_DENEGAR)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_12()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_24()) {
    jj_scanpos = xsp;
    if (jj_3_25()) return true;
    }
    return false;
  }

  private boolean jj_3_24()
 {
    if (jj_scan_token(T_OTORGAR)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_97()
 {
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_50()
 {
    if (jj_scan_token(ARROBA)) return true;
    return false;
  }

  private boolean jj_3_19()
 {
    if (jj_3R_25()) return true;
    return false;
  }

  private boolean jj_3_18()
 {
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3_17()
 {
    if (jj_3R_23()) return true;
    return false;
  }

  private boolean jj_3_16()
 {
    if (jj_3R_22()) return true;
    return false;
  }

  private boolean jj_3_86()
 {
    if (jj_scan_token(T_DONDE)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3R_11()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3_17()) {
    jj_scanpos = xsp;
    if (jj_3_18()) {
    jj_scanpos = xsp;
    if (jj_3_19()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_15()
 {
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3_14()
 {
    if (jj_3R_20()) return true;
    return false;
  }

  private boolean jj_3_13()
 {
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3_12()
 {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3_11()
 {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3_139()
 {
    if (jj_scan_token(PUNTO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_150()
 {
    if (jj_3R_60()) return true;
    return false;
  }

  private boolean jj_3R_14()
 {
    if (jj_scan_token(T_DECLARAR)) return true;
    if (jj_3R_50()) return true;
    return false;
  }

  private boolean jj_3_149()
 {
    if (jj_scan_token(PAR_IZQ)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3_148()
 {
    if (jj_3R_59()) return true;
    return false;
  }

  private boolean jj_3R_10()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_10()) {
    jj_scanpos = xsp;
    if (jj_3_11()) {
    jj_scanpos = xsp;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3_15()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_10()
 {
    if (jj_scan_token(T_USAR)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_91()
 {
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3_94()
 {
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3_93()
 {
    if (jj_3R_11()) return true;
    return false;
  }

  private boolean jj_3_92()
 {
    if (jj_3R_13()) return true;
    return false;
  }

  private boolean jj_3R_66()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_92()) {
    jj_scanpos = xsp;
    if (jj_3_93()) {
    jj_scanpos = xsp;
    if (jj_3_94()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_147()
 {
    if (jj_scan_token(ARROBA)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_139()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_85()
 {
    if (jj_scan_token(POR)) return true;
    return false;
  }

  private boolean jj_3_146()
 {
    if (jj_scan_token(VERDADERO)) return true;
    return false;
  }

  private boolean jj_3_145()
 {
    if (jj_scan_token(FALSO)) return true;
    return false;
  }

  private boolean jj_3_144()
 {
    if (jj_scan_token(DATETIME)) return true;
    return false;
  }

  private boolean jj_3_143()
 {
    if (jj_scan_token(DATE)) return true;
    return false;
  }

  private boolean jj_3_83()
 {
    if (jj_scan_token(T_DONDE)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3_142()
 {
    if (jj_scan_token(DECIMAL)) return true;
    return false;
  }

  private boolean jj_3_141()
 {
    if (jj_scan_token(ENTERO)) return true;
    return false;
  }

  private boolean jj_3R_16()
 {
    if (jj_scan_token(T_IMPRIMIR)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_138()
 {
    if (jj_scan_token(POTENCIA)) return true;
    if (jj_3R_58()) return true;
    return false;
  }

  private boolean jj_3R_58()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_140()) {
    jj_scanpos = xsp;
    if (jj_3_141()) {
    jj_scanpos = xsp;
    if (jj_3_142()) {
    jj_scanpos = xsp;
    if (jj_3_143()) {
    jj_scanpos = xsp;
    if (jj_3_144()) {
    jj_scanpos = xsp;
    if (jj_3_145()) {
    jj_scanpos = xsp;
    if (jj_3_146()) {
    jj_scanpos = xsp;
    if (jj_3_147()) {
    jj_scanpos = xsp;
    if (jj_3_148()) {
    jj_scanpos = xsp;
    if (jj_3_149()) {
    jj_scanpos = xsp;
    if (jj_3_150()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_81()
 {
    if (jj_3R_46()) return true;
    if (jj_scan_token(PAR_DER)) return true;
    return false;
  }

  private boolean jj_3_84()
 {
    if (jj_3R_46()) return true;
    return false;
  }

  private boolean jj_3_140()
 {
    if (jj_scan_token(CADENA)) return true;
    return false;
  }

  private boolean jj_3_9()
 {
    if (jj_3R_16()) return true;
    return false;
  }

  private boolean jj_3R_48()
 {
    if (jj_3R_66()) return true;
    return false;
  }

  private boolean jj_3_8()
 {
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3_7()
 {
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3_2()
 {
    if (jj_3R_9()) return true;
    return false;
  }

  private boolean jj_3_6()
 {
    if (jj_3R_13()) return true;
    return false;
  }

  private boolean jj_3_5()
 {
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3_4()
 {
    if (jj_3R_11()) return true;
    return false;
  }

  private boolean jj_3_90()
 {
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3R_69()
 {
    if (jj_3R_58()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_138()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_61()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) {
    jj_scanpos = xsp;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_3()
 {
    if (jj_3R_10()) return true;
    return false;
  }

  private boolean jj_3R_25()
 {
    if (jj_scan_token(T_SELECCIONAR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_84()) {
    jj_scanpos = xsp;
    if (jj_3_85()) return true;
    }
    return false;
  }

  private boolean jj_3_137()
 {
    if (jj_scan_token(MENOS)) return true;
    return false;
  }

  private boolean jj_3R_57()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_137()) jj_scanpos = xsp;
    if (jj_3R_69()) return true;
    return false;
  }

  private boolean jj_3R_24()
 {
    if (jj_scan_token(T_BORRAR)) return true;
    if (jj_scan_token(T_TABLA)) return true;
    return false;
  }

  private boolean jj_3R_9()
 {
    if (jj_3R_61()) return true;
    return false;
  }

  private boolean jj_3R_23()
 {
    if (jj_scan_token(T_ACTUALIZAR)) return true;
    if (jj_scan_token(T_TABLA)) return true;
    return false;
  }

  private boolean jj_3_136()
 {
    if (jj_scan_token(DIVISION)) return true;
    if (jj_3R_57()) return true;
    return false;
  }

  private boolean jj_3_1()
 {
    if (jj_3R_9()) return true;
    return false;
  }

  private boolean jj_3_134()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_135()) {
    jj_scanpos = xsp;
    if (jj_3_136()) return true;
    }
    return false;
  }

  private boolean jj_3_135()
 {
    if (jj_scan_token(POR)) return true;
    if (jj_3R_57()) return true;
    return false;
  }

  private boolean jj_3_80()
 {
    if (jj_scan_token(T_USUARIO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_79()
 {
    if (jj_scan_token(T_OBJETO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_78()
 {
    if (jj_scan_token(T_BASE_DATOS)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_56()
 {
    if (jj_3R_57()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_134()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_77()
 {
    if (jj_scan_token(T_TABLA)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_22()
 {
    if (jj_scan_token(T_INSERTAR)) return true;
    if (jj_scan_token(T_TABLA)) return true;
    return false;
  }

  private boolean jj_3_133()
 {
    if (jj_scan_token(MENOS)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3_131()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_132()) {
    jj_scanpos = xsp;
    if (jj_3_133()) return true;
    }
    return false;
  }

  private boolean jj_3_132()
 {
    if (jj_scan_token(MAS)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_19()
 {
    if (jj_scan_token(T_ELIMINAR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_77()) {
    jj_scanpos = xsp;
    if (jj_3_78()) {
    jj_scanpos = xsp;
    if (jj_3_79()) {
    jj_scanpos = xsp;
    if (jj_3_80()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_75()
 {
    if (jj_scan_token(T_AGREGAR)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_74()
 {
    if (jj_scan_token(COMA)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_55()
 {
    if (jj_3R_56()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_131()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_44()
 {
    if (jj_scan_token(T_USUARIO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_76()
 {
    if (jj_scan_token(T_QUITAR)) return true;
    if (jj_3R_46()) return true;
    return false;
  }

  private boolean jj_3_130()
 {
    if (jj_scan_token(MENORIGUAL)) return true;
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3R_45()
 {
    if (jj_scan_token(T_OBJETO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_129()
 {
    if (jj_scan_token(MAYORIGUAL)) return true;
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3_128()
 {
    if (jj_scan_token(MENOR)) return true;
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3_72()
 {
    if (jj_scan_token(T_AGREGAR)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_127()
 {
    if (jj_scan_token(MAYOR)) return true;
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3R_46()
 {
    if (jj_scan_token(ID)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_74()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_124()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_125()) {
    jj_scanpos = xsp;
    if (jj_3_126()) {
    jj_scanpos = xsp;
    if (jj_3_127()) {
    jj_scanpos = xsp;
    if (jj_3_128()) {
    jj_scanpos = xsp;
    if (jj_3_129()) {
    jj_scanpos = xsp;
    if (jj_3_130()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_125()
 {
    if (jj_scan_token(IGUALACION)) return true;
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3_126()
 {
    if (jj_scan_token(DIFERENCIACION)) return true;
    if (jj_3R_55()) return true;
    return false;
  }

  private boolean jj_3_71()
 {
    if (jj_3R_45()) return true;
    return false;
  }

  private boolean jj_3_70()
 {
    if (jj_3R_44()) return true;
    return false;
  }

  private boolean jj_3_69()
 {
    if (jj_3R_43()) return true;
    return false;
  }

  private boolean jj_3_73()
 {
    if (jj_scan_token(T_QUITAR)) return true;
    if (jj_3R_46()) return true;
    return false;
  }

  private boolean jj_3R_43()
 {
    if (jj_scan_token(T_TABLA)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_68()
 {
    if (jj_3R_55()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_124()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_122()
 {
    if (jj_scan_token(AND)) return true;
    if (jj_3R_54()) return true;
    return false;
  }

  private boolean jj_3R_18()
 {
    if (jj_scan_token(T_ALTERAR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_69()) {
    jj_scanpos = xsp;
    if (jj_3_70()) {
    jj_scanpos = xsp;
    if (jj_3_71()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_68()
 {
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3_123()
 {
    if (jj_scan_token(NOT)) return true;
    return false;
  }

  private boolean jj_3R_54()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_123()) jj_scanpos = xsp;
    if (jj_3R_68()) return true;
    return false;
  }

  private boolean jj_3_121()
 {
    if (jj_scan_token(OR)) return true;
    if (jj_3R_53()) return true;
    return false;
  }

  private boolean jj_3R_31()
 {
    if (jj_scan_token(T_RETORNO)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3R_53()
 {
    if (jj_3R_54()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_122()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_36()
 {
    if (jj_scan_token(T_USUARIO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_120()
 {
    if (jj_scan_token(COMA)) return true;
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3R_47()
 {
    if (jj_3R_53()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_121()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_116()
 {
    if (jj_scan_token(PUNTO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_107()
 {
    if (jj_scan_token(DECREMENTO)) return true;
    return false;
  }

  private boolean jj_3R_38()
 {
    if (jj_scan_token(T_FUNCION)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_32()
 {
    if (jj_3R_47()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_120()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_115()
 {
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3_66()
 {
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3_67()
 {
    if (jj_scan_token(COMA)) return true;
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3_118()
 {
    if (jj_scan_token(PUNTO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_106()
 {
    if (jj_scan_token(AUMENTO)) return true;
    return false;
  }

  private boolean jj_3R_65()
 {
    if (jj_3R_62()) return true;
    if (jj_scan_token(ARROBA)) return true;
    return false;
  }

  private boolean jj_3_117()
 {
    if (jj_scan_token(PAR_IZQ)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_115()) jj_scanpos = xsp;
    if (jj_scan_token(PAR_DER)) return true;
    return false;
  }

  private boolean jj_3_119()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_117()) {
    jj_scanpos = xsp;
    if (jj_3_118()) return true;
    }
    return false;
  }

  private boolean jj_3_111()
 {
    if (jj_scan_token(T_RESTAURAR_COMPLETO)) return true;
    return false;
  }

  private boolean jj_3_98()
 {
    if (jj_scan_token(COMA)) return true;
    if (jj_3R_50()) return true;
    return false;
  }

  private boolean jj_3R_59()
 {
    if (jj_scan_token(ID)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_119()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_42()
 {
    if (jj_3R_65()) return true;
    return false;
  }

  private boolean jj_3_109()
 {
    if (jj_scan_token(T_BACKUP_COMPLETO)) return true;
    return false;
  }

  private boolean jj_3_114()
 {
    if (jj_scan_token(T_CONTAR)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_113()
 {
    if (jj_scan_token(T_FECHA_HORA)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3R_60()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_112()) {
    jj_scanpos = xsp;
    if (jj_3_113()) {
    jj_scanpos = xsp;
    if (jj_3_114()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_112()
 {
    if (jj_scan_token(T_FECHA)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  private boolean jj_3_110()
 {
    if (jj_scan_token(T_RESTAURAR_USQL)) return true;
    return false;
  }

  private boolean jj_3R_21()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_110()) {
    jj_scanpos = xsp;
    if (jj_3_111()) return true;
    }
    if (jj_scan_token(CADENA)) return true;
    return false;
  }

  private boolean jj_3R_37()
 {
    if (jj_scan_token(T_PROCEDIMIENTO)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_108()
 {
    if (jj_scan_token(T_BACKUP_USQL)) return true;
    return false;
  }

  private boolean jj_3R_20()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_108()) {
    jj_scanpos = xsp;
    if (jj_3_109()) return true;
    }
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_65()
 {
    if (jj_scan_token(T_DATETIME)) return true;
    return false;
  }

  private boolean jj_3_64()
 {
    if (jj_scan_token(T_DATE)) return true;
    return false;
  }

  private boolean jj_3_63()
 {
    if (jj_scan_token(T_BOOL)) return true;
    return false;
  }

  private boolean jj_3_62()
 {
    if (jj_scan_token(T_DOUBLE)) return true;
    return false;
  }

  private boolean jj_3_61()
 {
    if (jj_scan_token(T_INTEGER)) return true;
    return false;
  }

  private boolean jj_3R_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_60()) {
    jj_scanpos = xsp;
    if (jj_3_61()) {
    jj_scanpos = xsp;
    if (jj_3_62()) {
    jj_scanpos = xsp;
    if (jj_3_63()) {
    jj_scanpos = xsp;
    if (jj_3_64()) {
    jj_scanpos = xsp;
    if (jj_3_65()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_60()
 {
    if (jj_scan_token(T_TEXT)) return true;
    return false;
  }

  private boolean jj_3_59()
 {
    if (jj_scan_token(COMA)) return true;
    if (jj_3R_41()) return true;
    return false;
  }

  private boolean jj_3R_64()
 {
    if (jj_3R_49()) return true;
    return false;
  }

  private boolean jj_3R_30()
 {
    if (jj_scan_token(T_MIENTRAS)) return true;
    if (jj_scan_token(PAR_IZQ)) return true;
    return false;
  }

  /** Generated Token Manager. */
  public usqlGrammarTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[0];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static private int[] jj_la1_3;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
      jj_la1_init_3();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {};
   }
   private static void jj_la1_init_3() {
      jj_la1_3 = new int[] {};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[150];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public usqlGrammar(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public usqlGrammar(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new usqlGrammarTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public usqlGrammar(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new usqlGrammarTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public usqlGrammar(usqlGrammarTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(usqlGrammarTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk_f() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              continue jj_entries_loop;
            }
          }
          jj_expentries.add(jj_expentry);
          break jj_entries_loop;
        }
      }
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[102];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 0; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
          if ((jj_la1_3[i] & (1<<j)) != 0) {
            la1tokens[96+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 102; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 150; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
            case 21: jj_3_22(); break;
            case 22: jj_3_23(); break;
            case 23: jj_3_24(); break;
            case 24: jj_3_25(); break;
            case 25: jj_3_26(); break;
            case 26: jj_3_27(); break;
            case 27: jj_3_28(); break;
            case 28: jj_3_29(); break;
            case 29: jj_3_30(); break;
            case 30: jj_3_31(); break;
            case 31: jj_3_32(); break;
            case 32: jj_3_33(); break;
            case 33: jj_3_34(); break;
            case 34: jj_3_35(); break;
            case 35: jj_3_36(); break;
            case 36: jj_3_37(); break;
            case 37: jj_3_38(); break;
            case 38: jj_3_39(); break;
            case 39: jj_3_40(); break;
            case 40: jj_3_41(); break;
            case 41: jj_3_42(); break;
            case 42: jj_3_43(); break;
            case 43: jj_3_44(); break;
            case 44: jj_3_45(); break;
            case 45: jj_3_46(); break;
            case 46: jj_3_47(); break;
            case 47: jj_3_48(); break;
            case 48: jj_3_49(); break;
            case 49: jj_3_50(); break;
            case 50: jj_3_51(); break;
            case 51: jj_3_52(); break;
            case 52: jj_3_53(); break;
            case 53: jj_3_54(); break;
            case 54: jj_3_55(); break;
            case 55: jj_3_56(); break;
            case 56: jj_3_57(); break;
            case 57: jj_3_58(); break;
            case 58: jj_3_59(); break;
            case 59: jj_3_60(); break;
            case 60: jj_3_61(); break;
            case 61: jj_3_62(); break;
            case 62: jj_3_63(); break;
            case 63: jj_3_64(); break;
            case 64: jj_3_65(); break;
            case 65: jj_3_66(); break;
            case 66: jj_3_67(); break;
            case 67: jj_3_68(); break;
            case 68: jj_3_69(); break;
            case 69: jj_3_70(); break;
            case 70: jj_3_71(); break;
            case 71: jj_3_72(); break;
            case 72: jj_3_73(); break;
            case 73: jj_3_74(); break;
            case 74: jj_3_75(); break;
            case 75: jj_3_76(); break;
            case 76: jj_3_77(); break;
            case 77: jj_3_78(); break;
            case 78: jj_3_79(); break;
            case 79: jj_3_80(); break;
            case 80: jj_3_81(); break;
            case 81: jj_3_82(); break;
            case 82: jj_3_83(); break;
            case 83: jj_3_84(); break;
            case 84: jj_3_85(); break;
            case 85: jj_3_86(); break;
            case 86: jj_3_87(); break;
            case 87: jj_3_88(); break;
            case 88: jj_3_89(); break;
            case 89: jj_3_90(); break;
            case 90: jj_3_91(); break;
            case 91: jj_3_92(); break;
            case 92: jj_3_93(); break;
            case 93: jj_3_94(); break;
            case 94: jj_3_95(); break;
            case 95: jj_3_96(); break;
            case 96: jj_3_97(); break;
            case 97: jj_3_98(); break;
            case 98: jj_3_99(); break;
            case 99: jj_3_100(); break;
            case 100: jj_3_101(); break;
            case 101: jj_3_102(); break;
            case 102: jj_3_103(); break;
            case 103: jj_3_104(); break;
            case 104: jj_3_105(); break;
            case 105: jj_3_106(); break;
            case 106: jj_3_107(); break;
            case 107: jj_3_108(); break;
            case 108: jj_3_109(); break;
            case 109: jj_3_110(); break;
            case 110: jj_3_111(); break;
            case 111: jj_3_112(); break;
            case 112: jj_3_113(); break;
            case 113: jj_3_114(); break;
            case 114: jj_3_115(); break;
            case 115: jj_3_116(); break;
            case 116: jj_3_117(); break;
            case 117: jj_3_118(); break;
            case 118: jj_3_119(); break;
            case 119: jj_3_120(); break;
            case 120: jj_3_121(); break;
            case 121: jj_3_122(); break;
            case 122: jj_3_123(); break;
            case 123: jj_3_124(); break;
            case 124: jj_3_125(); break;
            case 125: jj_3_126(); break;
            case 126: jj_3_127(); break;
            case 127: jj_3_128(); break;
            case 128: jj_3_129(); break;
            case 129: jj_3_130(); break;
            case 130: jj_3_131(); break;
            case 131: jj_3_132(); break;
            case 132: jj_3_133(); break;
            case 133: jj_3_134(); break;
            case 134: jj_3_135(); break;
            case 135: jj_3_136(); break;
            case 136: jj_3_137(); break;
            case 137: jj_3_138(); break;
            case 138: jj_3_139(); break;
            case 139: jj_3_140(); break;
            case 140: jj_3_141(); break;
            case 141: jj_3_142(); break;
            case 142: jj_3_143(); break;
            case 143: jj_3_144(); break;
            case 144: jj_3_145(); break;
            case 145: jj_3_146(); break;
            case 146: jj_3_147(); break;
            case 147: jj_3_148(); break;
            case 148: jj_3_149(); break;
            case 149: jj_3_150(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
