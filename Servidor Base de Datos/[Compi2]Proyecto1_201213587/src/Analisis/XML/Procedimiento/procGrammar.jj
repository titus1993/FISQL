options {
IGNORE_CASE = true;
STATIC = false;
OUTPUT_DIRECTORY="D:\\Titus\\Documents\\Proyectos\\Compiladores 2\\Proyecto 1\\FISQL\\Servidor Base de Datos\\[Compi2]Proyecto1_201213587\\src\\Analisis\\XML\\Procedimiento\\";

}

PARSER_BEGIN(procGrammar)
package Analisis.XML.Procedimiento;

import Funciones.XML.*;
import Static.*;
import java.util.ArrayList;


public class procGrammar {
  public static void main(String args[]) throws ParseException {
    procGrammar parser = new procGrammar(System.in);
    parser.S();
  }
}
PARSER_END(procGrammar)

TOKEN:
{
    <T_PROC_IZQ: ("<"(" ")*"proc")(" ")*">"> {System.out.println(image);}
    |<T_PROC_DER: ("<"(" ")*"/"(" ")*"proc")(" ")*">"> {System.out.println(image);}
    |<T_PARAMS_IZQ: ("<"(" ")*"params")(" ")*">"> {System.out.println(image);}
    |<T_PARAMS_DER: ("<"(" ")*"/"(" ")*"params")(" ")*">"> {System.out.println(image);}
    |<T_NOMBRE_IZQ: ("<"(" ")*"nombre")(" ")*">"> {System.out.println(image);}
    |<T_NOMBRE_DER: ("<"(" ")*"/"(" ")*"nombre")(" ")*">"> {System.out.println(image);}
    |<T_SRC_IZQ: ("<"(" ")*"src")(" ")*">"> {System.out.println(image);}
    |<T_SRC_DER: ("<"(" ")*"/"(" ")*"src")(" ")*">"> {System.out.println(image);}
}

TOKEN:
{
  
    <T_TEXT_IZQ: ("<"(" ")*"text"(" ")*">")> {System.out.println(image);}
    |<T_INTEGER_IZQ: ("<"(" ")*"integer"(" ")*">")> {System.out.println(image);}
    |<T_DOUBLE_IZQ: ("<"(" ")*"double"(" ")*">")> {System.out.println(image);}
    |<T_BOOL_IZQ:("<"(" ")*"bool"(" ")*">")> {System.out.println(image);}
    |<T_DATE_IZQ: ("<"(" ")*"date"(" ")*">")> {System.out.println(image);}
    |<T_DATETIME_IZQ: ("<"(" ")*"datetime"(" ")*">")> {System.out.println(image);}
    |<T_TEXT_DER: ("<"(" ")*"/"(" ")*"text"(" ")*">")> {System.out.println(image);}
    |<T_INTEGER_DER: ("<"(" ")*"/"(" ")*"integer"(" ")*">")> {System.out.println(image);}
    |<T_DOUBLE_DER: ("<"(" ")*"/"(" ")*"double"(" ")*">")> {System.out.println(image);}
    |<T_BOOL_DER:("<"(" ")*"/"(" ")*"bool"(" ")*">")> {System.out.println(image);}
    |<T_DATE_DER: ("<"(" ")*"/"(" ")*"date"(" ")*">")> {System.out.println(image);}
    |<T_DATETIME_DER: ("<"(" ")*"/"(" ")*"datetime"(" ")*">")> {System.out.println(image);}
}

TOKEN:
{  
    <CADENA:"\"" (~["\""])*"\""> {System.out.println(image);}
    |<SRC:"\u00a7" (~["\u00a7"])*"\u00a7"> {System.out.println(image);}
    |<ID_IZQ: ("<"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
    |<ID_DER: ("<"(" ")*"/"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
     
}

SKIP: 
{
  " "
| "\n"
| "\r"
| "\t"
}

ArrayList<Procedimiento> S():
{ArrayList<Procedimiento> p = new ArrayList<Procedimiento>();}
{   {System.out.println("Comienza!!");}
    (p=L_PROC())?
    {return p;}
    {System.out.println("Exito!!");}
}

ArrayList<Procedimiento> L_PROC():
{ArrayList<Procedimiento> p = new ArrayList<Procedimiento>(); ArrayList<Procedimiento> p2 = new ArrayList<Procedimiento>();}
{
   p=PROC() (p2=L_PROC(){
                    for(int i=0; i < p2.size(); i++){
                        p.add(p2.get(i));
                    }
                }
            )? {return p;}
}


ArrayList<Procedimiento> PROC():
{String n, s; ArrayList<Parametro> p = new ArrayList<Parametro>();}
{
    <T_PROC_IZQ>
        n=NOMBRE()
        (<T_PARAMS_IZQ> p=L_PARAMS() <T_PARAMS_DER>)?
        s=SRC()
    <T_PROC_DER>
    {ArrayList<Procedimiento> proc = new ArrayList<Procedimiento>();
        proc.add(new Procedimiento(n, s, p));
        return proc;
    }
}

String NOMBRE():
{Token t;}
{
    <T_NOMBRE_IZQ> t=<CADENA> <T_NOMBRE_DER> {return t.image.substring(1, t.image.length() - 1);}
}

ArrayList<Parametro> L_PARAMS():
{ArrayList<Parametro> p = new ArrayList<Parametro>(); ArrayList<Parametro> p2 = new ArrayList<Parametro>();}
{
    p=PARAMS() (p2=L_PARAMS(){
                    for(int i=0; i < p2.size(); i++){
                        p.add(p2.get(i));
                    }
                }
            )? {return p;}
}

ArrayList<Parametro> PARAMS():
{ArrayList<Parametro> p = new ArrayList<Parametro>(); Token c,t;}
{    
    (<T_TEXT_IZQ> c=<CADENA> {p.add(new Parametro(Tools.ttext, c.image.substring(1, c.image.length() - 1)));} <T_TEXT_DER> 
    |<T_INTEGER_IZQ> c=<CADENA> {p.add(new Parametro(Tools.tinteger, c.image.substring(1, c.image.length() - 1)));} <T_INTEGER_DER> 
    |<T_DOUBLE_IZQ> c=<CADENA> {p.add(new Parametro(Tools.tdouble, c.image.substring(1, c.image.length() - 1)));} <T_DOUBLE_DER> 
    |<T_BOOL_IZQ> c=<CADENA> {p.add(new Parametro(Tools.tbool, c.image.substring(1, c.image.length() - 1)));} <T_BOOL_DER> 
    |<T_DATE_IZQ> c=<CADENA> {p.add(new Parametro(Tools.tdate, c.image.substring(1, c.image.length() - 1)));} <T_DATE_DER> 
    |<T_DATETIME_IZQ> c=<CADENA> {p.add(new Parametro(Tools.tdatetime, c.image.substring(1, c.image.length() - 1)));} <T_DATETIME_DER>   
    |t=<ID_IZQ> c=<CADENA> {p.add(new Parametro(Tools.tobjeto, c.image.substring(1, c.image.length() - 1), t.image.substring(1, t.image.length() - 1).trim()));} <ID_DER>)    

    {return p;}
}

String SRC():
{Token t;}
{
    <T_SRC_IZQ> t=<SRC> <T_SRC_DER> {return t.image.substring(1, t.image.length() - 1);}
}