options {
IGNORE_CASE = true;
STATIC = false;
OUTPUT_DIRECTORY="D:\\Titus\\Documents\\Proyectos\\Compiladores 2\\Proyecto 1\\FISQL\\Servidor Base de Datos\\[Compi2]Proyecto1_201213587\\src\\Analisis\\XML\\Tabla\\";

}

PARSER_BEGIN(tablaGrammar)
package Analisis.XML.Tabla;

public class tablaGrammar {
  public static void main(String args[]) throws ParseException {
    tablaGrammar parser = new tablaGrammar(System.in);
    parser.S();
  }
}
PARSER_END(tablaGrammar)

TOKEN:
{
    <T_ROW_IZQ: ("<"(" ")*"row")(" ")*">"> {System.out.println(image);}
    |<T_ROW_DER: ("<"(" ")*"/"(" ")*"row")(" ")*">"> {System.out.println(image);}
}


TOKEN:
{  
    <CADENA:"\"" (~["\""])*"\""> {System.out.println(image);}
    |<ID_IZQ: ("<"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
    |<ID_DER: ("<"(" ")*"/"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
     
}

SKIP: 
{
  " "
| "\n"
| "\r"
| "\t"
}

void S():
{}
{   {System.out.println("Comienza!!");}
    L_ROW()
    {System.out.println("Exito!!");}
}

void L_ROW():
{}
{
   ROW() (L_ROW())?
}


void ROW():
{}
{
    <T_ROW_IZQ> 
        L_CAMPOS()
    <T_ROW_DER>
}

void L_CAMPOS():
{}
{
    CAMPO() (L_CAMPOS())?
}

void CAMPO():
{}
{
    <ID_IZQ> (<CADENA>|L_OBJETO()) <ID_DER>
}

void L_OBJETO():
{}
{
    OBJETO() (L_OBJETO())?
}

void OBJETO():
{}
{
    <ID_IZQ> <CADENA> <ID_DER>
}