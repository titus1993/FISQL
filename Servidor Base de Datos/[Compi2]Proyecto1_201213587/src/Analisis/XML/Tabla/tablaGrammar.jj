options {
IGNORE_CASE = true;
STATIC = false;
OUTPUT_DIRECTORY="D:\\Titus\\Documents\\Proyectos\\Compiladores 2\\Proyecto 1\\FISQL\\Servidor Base de Datos\\[Compi2]Proyecto1_201213587\\src\\Analisis\\XML\\Tabla\\";

}

PARSER_BEGIN(tablaGrammar)
package Analisis.XML.Tabla;

import Funciones.XML.*;
import Static.*;
import java.util.ArrayList;

public class tablaGrammar {
  public static void main(String args[]) throws ParseException {
    tablaGrammar parser = new tablaGrammar(System.in);
    parser.S();
  }
}
PARSER_END(tablaGrammar)

TOKEN:
{
    <T_ROW_IZQ: ("<"(" ")*"row")(" ")*">"> {System.out.println(image);}
    |<T_ROW_DER: ("<"(" ")*"/"(" ")*"row")(" ")*">"> {System.out.println(image);}
}


TOKEN:
{  
    <CADENA:"\"" (~["\""])*"\""> {System.out.println(image);}
    |<ID_IZQ: ("<"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
    |<ID_DER: ("<"(" ")*"/"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
     
}

SKIP: 
{
  " "
| "\n"
| "\r"
| "\t"
}

ArrayList<ArrayList<Columna>> S():
{ArrayList<ArrayList<Columna>> c = new ArrayList<ArrayList<Columna>>();}
{   {System.out.println("Comienza!!");}
    (c=L_ROW())?
    {System.out.println("Exito!!"); return c;}
}

ArrayList<ArrayList<Columna>> L_ROW():
{ArrayList<ArrayList<Columna>> c = new ArrayList<ArrayList<Columna>>(); ArrayList<ArrayList<Columna>> c2 = new ArrayList<ArrayList<Columna>>();}
{
   c=ROW() (c2=L_ROW(){
                    for(int i=0; i < c2.size(); i++){
                        c.add(c2.get(i));
                    }
                }
            )? {return c;}
}


ArrayList<ArrayList<Columna>> ROW():
{ArrayList<Columna> c = new ArrayList<Columna>();}
{
    <T_ROW_IZQ> 
        c = L_CAMPOS()
    <T_ROW_DER> {ArrayList<ArrayList<Columna>> row = new ArrayList<ArrayList<Columna>>();
                    row.add(c);
                    return row;
                }
}

ArrayList<Columna> L_CAMPOS():
{ArrayList<Columna> c = new ArrayList<Columna>(); ArrayList<Columna> c2 = new ArrayList<Columna>();}
{
    c=CAMPO() (c2=L_CAMPOS(){
                    for(int i=0; i < c2.size(); i++){
                        c.add(c2.get(i));
                    }
                }
            )? {return c;}
}

ArrayList<Columna> CAMPO():
{Token t,c; ArrayList<Columna> o = new ArrayList<Columna>();}
{
    c=<ID_IZQ> (t=<CADENA>{ o.add(new Columna(c.image.substring(1, c.image.length() - 1).trim(), t.image.substring(1, t.image.length() - 1).trim()));}
                |o=L_OBJETO()   {
                                    columnaObjeto co = new columnaObjeto(o);
                                    o = new ArrayList<Columna>();
                                    o.add(new Columna(c.image.substring(1, c.image.length() - 1).trim(), co));
                                }) <ID_DER> {return o;}
}

ArrayList<Columna> L_OBJETO():
{ArrayList<Columna> c = new ArrayList<Columna>(); ArrayList<Columna> c2 = new ArrayList<Columna>();}
{
    c=OBJETO() (c2=L_OBJETO(){
                    for(int i=0; i < c2.size(); i++){
                        c.add(c2.get(i));
                    }
                }
            )? {return c;}
}

ArrayList<Columna> OBJETO():
{Token t,i;}
{
   i=<ID_IZQ> t=<CADENA> <ID_DER> {
                                    ArrayList<Columna> c = new ArrayList<Columna>();
                                    c.add(new Columna(i.image.substring(1, i.image.length() - 1).trim(), t.image.substring(1, t.image.length() - 1).trim()));
                                    return c;
                                    }
}