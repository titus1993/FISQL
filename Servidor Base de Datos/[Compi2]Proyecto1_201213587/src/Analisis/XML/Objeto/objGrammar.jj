options {
IGNORE_CASE = true;
STATIC = false;
OUTPUT_DIRECTORY="D:\\Titus\\Documents\\Proyectos\\Compiladores 2\\Proyecto 1\\FISQL\\Servidor Base de Datos\\[Compi2]Proyecto1_201213587\\src\\Analisis\\XML\\Objeto\\";

}

PARSER_BEGIN(objGrammar)
package Analisis.XML.Objeto;

import Funciones.XML.*;
import Static.*;
import java.util.ArrayList;

public class objGrammar {
  public static void main(String args[]) throws ParseException {
    objGrammar parser = new objGrammar(System.in);
    parser.S();
  }
}
PARSER_END(objGrammar)

TOKEN:
{
    <T_OBJ_IZQ: ("<"(" ")*"obj")(" ")*">"> {System.out.println(image);}
    |<T_OBJ_DER: ("<"(" ")*"/"(" ")*"obj")(" ")*">"> {System.out.println(image);}
    |<T_ATTR_IZQ: ("<"(" ")*"attr")(" ")*">"> {System.out.println(image);}
    |<T_ATTR_DER: ("<"(" ")*"/"(" ")*"attr")(" ")*">"> {System.out.println(image);}
    |<T_NOMBRE_IZQ: ("<"(" ")*"nombre")(" ")*">"> {System.out.println(image);}
    |<T_NOMBRE_DER: ("<"(" ")*"/"(" ")*"nombre")(" ")*">"> {System.out.println(image);}
}

TOKEN:
{
  
    <T_TEXT_IZQ: ("<"(" ")*"text"(" ")*">")> {System.out.println(image);}
    |<T_INTEGER_IZQ: ("<"(" ")*"integer"(" ")*">")> {System.out.println(image);}
    |<T_DOUBLE_IZQ: ("<"(" ")*"double"(" ")*">")> {System.out.println(image);}
    |<T_BOOL_IZQ:("<"(" ")*"bool"(" ")*">")> {System.out.println(image);}
    |<T_DATE_IZQ: ("<"(" ")*"date"(" ")*">")> {System.out.println(image);}
    |<T_DATETIME_IZQ: ("<"(" ")*"datetime"(" ")*">")> {System.out.println(image);}
    |<T_TEXT_DER: ("<"(" ")*"/"(" ")*"text"(" ")*">")> {System.out.println(image);}
    |<T_INTEGER_DER: ("<"(" ")*"/"(" ")*"integer"(" ")*">")> {System.out.println(image);}
    |<T_DOUBLE_DER: ("<"(" ")*"/"(" ")*"double"(" ")*">")> {System.out.println(image);}
    |<T_BOOL_DER:("<"(" ")*"/"(" ")*"bool"(" ")*">")> {System.out.println(image);}
    |<T_DATE_DER: ("<"(" ")*"/"(" ")*"date"(" ")*">")> {System.out.println(image);}
    |<T_DATETIME_DER: ("<"(" ")*"/"(" ")*"datetime"(" ")*">")> {System.out.println(image);}
    |<ID_IZQ: ("<"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
    |<ID_DER: ("<"(" ")*"/"(" ")*["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*(" ")*">"> {System.out.println(image);}
  
}

TOKEN:
{  
    <ID: (["a"-"z","A"-"Z"])(["a"-"z","A"-"Z","0"-"9","_"])*> {System.out.println(image);}
}

SKIP: 
{
  " "
| "\n"
| "\r"
| "\t"
}

ArrayList<Objeto> S():
{ArrayList<Objeto> o = new ArrayList<Objeto>();}
{   {System.out.println("Comienza!!");}
    (o=L_OBJ())?
    {return o;}
    {System.out.println("Exito!!");}
}

ArrayList<Objeto> L_OBJ():
{ArrayList<Objeto> o = new ArrayList<Objeto>(); ArrayList<Objeto> o2 = new ArrayList<Objeto>();}
{
   o=OBJ() (o2=L_OBJ(){
                    for(int i=0; i < o2.size(); i++){
                        o.add(o2.get(i));
                    }
                }
            )? {return o;}
}


ArrayList<Objeto> OBJ():
{String n; ArrayList<Parametro> p = new ArrayList<Parametro>();}
{
    <T_OBJ_IZQ>
        n = NOMBRE()
        <T_ATTR_IZQ> p=L_ATTR() <T_ATTR_DER>
    <T_OBJ_DER>
    {ArrayList<Objeto> obj = new ArrayList<Objeto>();
        obj.add(new Objeto(n, p));
        return obj;
    }
}

String NOMBRE():
{Token t;}
{
    <T_NOMBRE_IZQ> t=<ID> <T_NOMBRE_DER> {return t.image;}
}

ArrayList<Parametro> L_ATTR():
{ArrayList<Parametro> p = new ArrayList<Parametro>(); ArrayList<Parametro> p2 = new ArrayList<Parametro>();}
{
    p=ATTR() (p2=L_ATTR(){
                    for(int i=0; i < p2.size(); i++){
                        p.add(p2.get(i));
                    }
                }
            )? {return p;}
}

ArrayList<Parametro> ATTR():
{ArrayList<Parametro> p = new ArrayList<Parametro>(); Token c;}
{    
    (<T_TEXT_IZQ> c=<ID> {p.add(new Parametro(Tools.ttext, c.image));} <T_TEXT_DER> 
    |<T_INTEGER_IZQ> c=<ID> {p.add(new Parametro(Tools.tinteger, c.image));} <T_INTEGER_DER> 
    |<T_DOUBLE_IZQ> c=<ID> {p.add(new Parametro(Tools.tdouble, c.image));} <T_DOUBLE_DER> 
    |<T_BOOL_IZQ> c=<ID> {p.add(new Parametro(Tools.tbool, c.image));} <T_BOOL_DER> 
    |<T_DATE_IZQ> c=<ID> {p.add(new Parametro(Tools.tdate, c.image));} <T_DATE_DER> 
    |<T_DATETIME_IZQ> c=<ID> {p.add(new Parametro(Tools.tdatetime, c.image));} <T_DATETIME_DER>)    

    {return p;}
}