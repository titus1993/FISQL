<func>
<tipo> integer </tipo>
< nombre >"nombre_proc1"</ nombre >
<params>
<int>"Nombre_param1"</int>
<text>"Nombre_param2"</text>
<bool>"Nombre_param3"</bool>
</params>
<src>§
CREAR BASE_DATOS Ejemplo1;
USAR Ejemplo1;
CREAR OBJETO Direccion(INTEGER avenida, INTEGER calle, TEXT nombre, TEXT descripcion);
CREAR TABLA Estudiante ( INTEGER id Llave_Primaria Autoincrementable, TEXT Nombre No Nulo, DATE fh_nac No Nulo, BOOL trabaja, Direccion direccion);
CREAR TABLA Curso( INTEGER id Llave_Primaria Autoincrementable, TEXT Nombre No Nulo, INTEGER creditos No Nulo);
CREAR TABLA Asignacion( INTEGER id Llave_Primaria Autoincrementable, DATETIME fh_Asignacion No Nulo, INTEGER id_estudiante Llave_Foranea Estudiante, INTEGER id_curso Llave_Foranea Curso);
CREAR PROCEDIMIENTO Asignar (INTEGER @id_e, INTEGER @id_c){
	DECLARAR @estudiante INTEGER= CONTAR(<<SELECCIONAR * DE estudiante DONDE id == @id_e>>);
	DECLARAR @curso INTEGER= CONTAR(<<SELECCIONAR * DE curso DONDE id == @id_c>>);
	SI (@curso > 0){
		SI(@estudiante > 0){
			INSERTAR EN TABLA asignacion(id_estudiante, id_curso) VALORES (@id_e, @id_c);
		}SINO{
			IMPRIMIR("El usuario ingresado no existe");
		}
	 }SINO{
		 IMPRIMIR("El curso ingresado no existe");
	 }
 }

CREAR FUNCION crearDireccion (INTEGER @calle, INTEGER @avenida, TEXT @nombre, TEXT @descripcion) Direccion{
	DECLARAR @direc DIRECCION;
	@direc.calle = @calle.calle;
	@direc.avenida = @avenida;
	@direc.nombre = @nombre;
	@direc.descripcion = @descripcion;
	RETORNO @direc;
}




CREAR BASE_DATOS Ejemplo2;
USAR Ejemplo2;
CREAR TABLA Proveedor( INTEGER id Llave_Primaria Autoincrementable, TEXT nombre No Nulo, TEXT direccion No Nulo );
CREAR TABLA Producto( INTEGER id Llave_Primaria Autoincrementable, TEXT nombre No Nulo, DOUBLE precio No Nulo, INTEGER id_proveedor Llave_Foranea Proveedor );

CREAR PROCEDIMIENTO llenarTablas(){
	DECLARAR @producto INTEGER = 0;
	#inserta 10 registros en la tabla proveedor
	PARA(DECLARAR @i INTEGER = 0; @i < 10; ++){
		INSERTAR EN TABLA Proveedor(id, nombre, direccion) VALORES (@i, "Proveedor" + @i, "Direcci�n" + @i);
		#inserta 20 productos por proveedor
			PARA(DECLARAR @j INTEGER = 0; @j < 20; ++){
				DECLARAR @precio DOUBLE = generarPrecio(@producto);
				INSERTAR EN TABLA Producto (@producto, "Producto" + @producto, @precio, @i); @producto = @producto + 1;
				totis(@C+@C);
			}
	 }
 }

CREAR FUNCION generarPrecio(INTEGER @a)  INTEGER {
	DECLARAR @retorno DOUBLE = 1.5;
	RETORNO @retorno * @a;
}
#llenar las tablas

llenarTablas();

#imprimir cantidad de registros de la tabla Producto
IMPRIMIR(COntar(<<SELECCIONAR * DE Producto>>));
#el resultado de la instrucci�n deber�a ser:
#200
#borrar todos los productos del proveedor con id 1

BORRAR EN TABLA Producto DONDE t.id_proveedor == 1;

#imprimir cantidad de registros de la tabla Producto

IMPRIMIR(COntar(<<SELECCIONAR * DE Producto>>));

#el resultado de la instrucci�n deber�a ser: #180
§</src>
</ func >
